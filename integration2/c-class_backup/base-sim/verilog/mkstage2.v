//
// Generated by Bluespec Compiler (build a026416)
//
// On Sat Aug  8 15:33:53 IST 2020
//
//
// Ports:
// Name                         I/O  size props
// rx_from_stage1_deq_ena         O     1
// tx_meta_to_stage3_enq_ena      O     1
// tx_meta_to_stage3_enq_data     O   103
// tx_mtval_to_stage3_enq_ena     O     1
// tx_mtval_to_stage3_enq_data    O    64
// mv_op1                         O    71
// mv_op2                         O    72
// mv_op3                         O    70
// rx_inst_deq_ena                O     1
// tx_inst_enq_ena                O     1
// tx_inst_enq_data               O    32
// RDY_commit_rd                  O     1
// RDY_clear_stall                O     1 reg
// debug_access_gprs              O    64
// RDY_debug_access_gprs          O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_from_stage1_notEmpty_b      I     1
// rx_from_stage1_first_deq_rdy_b  I     1
// rx_from_stage1_first_x         I   122
// tx_meta_to_stage3_notFull_b    I     1 unused
// tx_meta_to_stage3_enq_rdy_b    I     1
// tx_mtval_to_stage3_notFull_b   I     1
// tx_mtval_to_stage3_enq_rdy_b   I     1
// rx_inst_notEmpty_b             I     1 unused
// rx_inst_first_deq_rdy_b        I     1
// rx_inst_first_x                I    32
// tx_inst_notFull_b              I     1 unused
// tx_inst_enq_rdy_b              I     1
// commit_rd_commit               I    70
// csrs_csr                       I   199
// clear_stall_upd                I     1
// ma_resume_wfi_w                I     1
// debug_access_gprs_cmd          I    80
// debug_status_status            I     5
// EN_commit_rd                   I     1
// EN_csrs                        I     1
// EN_clear_stall                 I     1
// EN_update_eEpoch               I     1
// EN_update_wEpoch               I     1
// EN_ma_resume_wfi               I     1
// EN_debug_access_gprs           I     1
//
// Combinational paths from inputs to outputs:
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    EN_csrs) -> rx_from_stage1_deq_ena
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_meta_to_stage3_enq_ena
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_meta_to_stage3_enq_data
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_mtval_to_stage3_enq_ena
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_mtval_to_stage3_enq_data
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    EN_csrs) -> rx_inst_deq_ena
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_inst_enq_ena
//   (rx_from_stage1_notEmpty_b,
//    rx_from_stage1_first_deq_rdy_b,
//    rx_from_stage1_first_x,
//    tx_meta_to_stage3_enq_rdy_b,
//    tx_mtval_to_stage3_notFull_b,
//    tx_mtval_to_stage3_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    rx_inst_first_x,
//    tx_inst_enq_rdy_b,
//    csrs_csr,
//    debug_status_status,
//    EN_csrs) -> tx_inst_enq_data
//   (debug_access_gprs_cmd, EN_debug_access_gprs) -> debug_access_gprs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage2(CLK,
		RST_N,

		rx_from_stage1_notEmpty_b,

		rx_from_stage1_first_deq_rdy_b,

		rx_from_stage1_first_x,

		rx_from_stage1_deq_ena,

		tx_meta_to_stage3_notFull_b,

		tx_meta_to_stage3_enq_rdy_b,

		tx_meta_to_stage3_enq_ena,

		tx_meta_to_stage3_enq_data,

		tx_mtval_to_stage3_notFull_b,

		tx_mtval_to_stage3_enq_rdy_b,

		tx_mtval_to_stage3_enq_ena,

		tx_mtval_to_stage3_enq_data,

		mv_op1,

		mv_op2,

		mv_op3,

		rx_inst_notEmpty_b,

		rx_inst_first_deq_rdy_b,

		rx_inst_first_x,

		rx_inst_deq_ena,

		tx_inst_notFull_b,

		tx_inst_enq_rdy_b,

		tx_inst_enq_ena,

		tx_inst_enq_data,

		commit_rd_commit,
		EN_commit_rd,
		RDY_commit_rd,

		csrs_csr,
		EN_csrs,

		clear_stall_upd,
		EN_clear_stall,
		RDY_clear_stall,

		EN_update_eEpoch,

		EN_update_wEpoch,

		ma_resume_wfi_w,
		EN_ma_resume_wfi,

		debug_access_gprs_cmd,
		EN_debug_access_gprs,
		debug_access_gprs,
		RDY_debug_access_gprs,

		debug_status_status);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method rx_from_stage1_notEmpty
  input  rx_from_stage1_notEmpty_b;

  // action method rx_from_stage1_first_deq_rdy
  input  rx_from_stage1_first_deq_rdy_b;

  // action method rx_from_stage1_first
  input  [121 : 0] rx_from_stage1_first_x;

  // value method rx_from_stage1_deq_ena
  output rx_from_stage1_deq_ena;

  // action method tx_meta_to_stage3_notFull
  input  tx_meta_to_stage3_notFull_b;

  // action method tx_meta_to_stage3_enq_rdy
  input  tx_meta_to_stage3_enq_rdy_b;

  // value method tx_meta_to_stage3_enq_ena
  output tx_meta_to_stage3_enq_ena;

  // value method tx_meta_to_stage3_enq_data
  output [102 : 0] tx_meta_to_stage3_enq_data;

  // action method tx_mtval_to_stage3_notFull
  input  tx_mtval_to_stage3_notFull_b;

  // action method tx_mtval_to_stage3_enq_rdy
  input  tx_mtval_to_stage3_enq_rdy_b;

  // value method tx_mtval_to_stage3_enq_ena
  output tx_mtval_to_stage3_enq_ena;

  // value method tx_mtval_to_stage3_enq_data
  output [63 : 0] tx_mtval_to_stage3_enq_data;

  // value method mv_op1
  output [70 : 0] mv_op1;

  // value method mv_op2
  output [71 : 0] mv_op2;

  // value method mv_op3
  output [69 : 0] mv_op3;

  // action method rx_inst_notEmpty
  input  rx_inst_notEmpty_b;

  // action method rx_inst_first_deq_rdy
  input  rx_inst_first_deq_rdy_b;

  // action method rx_inst_first
  input  [31 : 0] rx_inst_first_x;

  // value method rx_inst_deq_ena
  output rx_inst_deq_ena;

  // action method tx_inst_notFull
  input  tx_inst_notFull_b;

  // action method tx_inst_enq_rdy
  input  tx_inst_enq_rdy_b;

  // value method tx_inst_enq_ena
  output tx_inst_enq_ena;

  // value method tx_inst_enq_data
  output [31 : 0] tx_inst_enq_data;

  // action method commit_rd
  input  [69 : 0] commit_rd_commit;
  input  EN_commit_rd;
  output RDY_commit_rd;

  // action method csrs
  input  [198 : 0] csrs_csr;
  input  EN_csrs;

  // action method clear_stall
  input  clear_stall_upd;
  input  EN_clear_stall;
  output RDY_clear_stall;

  // action method update_eEpoch
  input  EN_update_eEpoch;

  // action method update_wEpoch
  input  EN_update_wEpoch;

  // action method ma_resume_wfi
  input  ma_resume_wfi_w;
  input  EN_ma_resume_wfi;

  // actionvalue method debug_access_gprs
  input  [79 : 0] debug_access_gprs_cmd;
  input  EN_debug_access_gprs;
  output [63 : 0] debug_access_gprs;
  output RDY_debug_access_gprs;

  // action method debug_status
  input  [4 : 0] debug_status_status;

  // signals for module outputs
  wire [102 : 0] tx_meta_to_stage3_enq_data;
  wire [71 : 0] mv_op2;
  wire [70 : 0] mv_op1;
  wire [69 : 0] mv_op3;
  wire [63 : 0] debug_access_gprs, tx_mtval_to_stage3_enq_data;
  wire [31 : 0] tx_inst_enq_data;
  wire RDY_clear_stall,
       RDY_commit_rd,
       RDY_debug_access_gprs,
       rx_from_stage1_deq_ena,
       rx_inst_deq_ena,
       tx_inst_enq_ena,
       tx_meta_to_stage3_enq_ena,
       tx_mtval_to_stage3_enq_ena;

  // inlined wires
  wire [198 : 0] wr_csrs_wget;
  wire [102 : 0] tx_meta_w_data_wget;
  wire [71 : 0] rg_op2_port0__write_1,
		rg_op2_port1__read,
		rg_op2_port1__write_1,
		rg_op2_port2__read;
  wire [70 : 0] rg_op1_port0__write_1,
		rg_op1_port1__read,
		rg_op1_port1__write_1,
		rg_op1_port2__read;
  wire [69 : 0] rg_op3_port0__write_1,
		rg_op3_port1__read,
		rg_op3_port1__write_1,
		rg_op3_port2__read;
  wire rg_op1_EN_port1__write,
       rg_op2_EN_port1__write,
       rg_op3_EN_port1__write,
       rxinst_w_ena_whas,
       txinst_w_ena_whas;

  // register eEpoch
  reg eEpoch;
  wire eEpoch_D_IN, eEpoch_EN;

  // register rg_fencei_rerun
  reg rg_fencei_rerun;
  wire rg_fencei_rerun_D_IN, rg_fencei_rerun_EN;

  // register rg_op1
  reg [70 : 0] rg_op1;
  wire [70 : 0] rg_op1_D_IN;
  wire rg_op1_EN;

  // register rg_op2
  reg [71 : 0] rg_op2;
  wire [71 : 0] rg_op2_D_IN;
  wire rg_op2_EN;

  // register rg_op3
  reg [69 : 0] rg_op3;
  wire [69 : 0] rg_op3_D_IN;
  wire rg_op3_EN;

  // register rg_rerun
  reg rg_rerun;
  wire rg_rerun_D_IN, rg_rerun_EN;

  // register rg_sfence_rerun
  reg rg_sfence_rerun;
  wire rg_sfence_rerun_D_IN, rg_sfence_rerun_EN;

  // register rg_stall
  reg rg_stall;
  wire rg_stall_D_IN, rg_stall_EN;

  // register rg_step_done
  reg rg_step_done;
  wire rg_step_done_D_IN, rg_step_done_EN;

  // register rg_wfi
  reg rg_wfi;
  wire rg_wfi_D_IN, rg_wfi_EN;

  // register wEpoch
  reg wEpoch;
  wire wEpoch_D_IN, wEpoch_EN;

  // ports of submodule registerfile
  wire [79 : 0] registerfile_debug_access_gprs_cmd;
  wire [69 : 0] registerfile_commit_rd_c;
  wire [63 : 0] registerfile_debug_access_gprs,
		registerfile_read_rs1,
		registerfile_read_rs2,
		registerfile_read_rs3;
  wire [4 : 0] registerfile_read_rs1_addr,
	       registerfile_read_rs2_addr,
	       registerfile_read_rs3_addr;
  wire registerfile_EN_commit_rd,
       registerfile_EN_debug_access_gprs,
       registerfile_EN_read_rs1,
       registerfile_EN_read_rs2,
       registerfile_EN_read_rs3,
       registerfile_RDY_commit_rd,
       registerfile_RDY_debug_access_gprs,
       registerfile_RDY_read_rs1,
       registerfile_RDY_read_rs2,
       registerfile_RDY_read_rs3,
       registerfile_read_rs1_rs1type,
       registerfile_read_rs2_rs2type;

  // rule scheduling signals
  wire CAN_FIRE_RL_decode_and_opfetch,
       CAN_FIRE_RL_rl_wait_for_interrupt,
       CAN_FIRE_clear_stall,
       CAN_FIRE_commit_rd,
       CAN_FIRE_csrs,
       CAN_FIRE_debug_access_gprs,
       CAN_FIRE_debug_status,
       CAN_FIRE_ma_resume_wfi,
       CAN_FIRE_rx_from_stage1_first,
       CAN_FIRE_rx_from_stage1_first_deq_rdy,
       CAN_FIRE_rx_from_stage1_notEmpty,
       CAN_FIRE_rx_inst_first,
       CAN_FIRE_rx_inst_first_deq_rdy,
       CAN_FIRE_rx_inst_notEmpty,
       CAN_FIRE_tx_inst_enq_rdy,
       CAN_FIRE_tx_inst_notFull,
       CAN_FIRE_tx_meta_to_stage3_enq_rdy,
       CAN_FIRE_tx_meta_to_stage3_notFull,
       CAN_FIRE_tx_mtval_to_stage3_enq_rdy,
       CAN_FIRE_tx_mtval_to_stage3_notFull,
       CAN_FIRE_update_eEpoch,
       CAN_FIRE_update_wEpoch,
       WILL_FIRE_RL_decode_and_opfetch,
       WILL_FIRE_RL_rl_wait_for_interrupt,
       WILL_FIRE_clear_stall,
       WILL_FIRE_commit_rd,
       WILL_FIRE_csrs,
       WILL_FIRE_debug_access_gprs,
       WILL_FIRE_debug_status,
       WILL_FIRE_ma_resume_wfi,
       WILL_FIRE_rx_from_stage1_first,
       WILL_FIRE_rx_from_stage1_first_deq_rdy,
       WILL_FIRE_rx_from_stage1_notEmpty,
       WILL_FIRE_rx_inst_first,
       WILL_FIRE_rx_inst_first_deq_rdy,
       WILL_FIRE_rx_inst_notEmpty,
       WILL_FIRE_tx_inst_enq_rdy,
       WILL_FIRE_tx_inst_notFull,
       WILL_FIRE_tx_meta_to_stage3_enq_rdy,
       WILL_FIRE_tx_meta_to_stage3_notFull,
       WILL_FIRE_tx_mtval_to_stage3_enq_rdy,
       WILL_FIRE_tx_mtval_to_stage3_notFull,
       WILL_FIRE_update_eEpoch,
       WILL_FIRE_update_wEpoch;

  // inputs to muxes for submodule ports
  wire MUX_rg_rerun_write_1__SEL_1,
       MUX_rg_rerun_write_1__VAL_2,
       MUX_rg_stall_write_1__VAL_2,
       MUX_rg_wfi_write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d30;
  reg TASK_testplusargs___d31;
  reg TASK_testplusargs___d32;
  reg [63 : 0] v__h2722;
  reg TASK_testplusargs___d55;
  reg TASK_testplusargs___d56;
  reg TASK_testplusargs___d57;
  reg [63 : 0] v__h3042;
  reg TASK_testplusargs___d67;
  reg TASK_testplusargs___d68;
  reg TASK_testplusargs___d69;
  reg [63 : 0] v__h3247;
  reg TASK_testplusargs___d98;
  reg TASK_testplusargs___d99;
  reg TASK_testplusargs___d100;
  reg [63 : 0] v__h3683;
  reg TASK_testplusargs___d170;
  reg TASK_testplusargs___d171;
  reg TASK_testplusargs___d172;
  reg [63 : 0] v__h4107;
  reg TASK_testplusargs___d207;
  reg TASK_testplusargs___d208;
  reg TASK_testplusargs___d209;
  reg [63 : 0] v__h4572;
  reg TASK_testplusargs___d221;
  reg TASK_testplusargs___d222;
  reg TASK_testplusargs___d223;
  reg [63 : 0] v__h4755;
  reg TASK_testplusargs___d232;
  reg TASK_testplusargs___d233;
  reg TASK_testplusargs___d234;
  reg [63 : 0] v__h4946;
  reg TASK_testplusargs___d317;
  reg TASK_testplusargs___d318;
  reg TASK_testplusargs___d319;
  reg [63 : 0] v__h6218;
  reg TASK_testplusargs___d428;
  reg TASK_testplusargs___d429;
  reg TASK_testplusargs___d430;
  reg [63 : 0] v__h4341;
  reg TASK_testplusargs___d503;
  reg TASK_testplusargs___d504;
  reg TASK_testplusargs___d505;
  reg [63 : 0] v__h7614;
  reg TASK_testplusargs___d515;
  reg TASK_testplusargs___d516;
  reg TASK_testplusargs___d517;
  reg [63 : 0] v__h7783;
  reg TASK_testplusargs___d533;
  reg TASK_testplusargs___d534;
  reg TASK_testplusargs___d535;
  reg [63 : 0] v__h8012;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d41;
  reg NOT_wr_flush_from_exe_whas__94_95_OR_NOT_wr_fl_ETC___d212;
  reg wr_flush_from_exe_whas__94_AND_wr_flush_from_e_ETC___d226;
  reg NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d237;
  reg NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d325;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d328;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d331;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d334;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d337;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d340;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d344;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d346;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d349;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d352;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d355;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d358;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d360;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d363;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d379;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d382;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d385;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d388;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d392;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d397;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d400;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d408;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d412;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d418;
  reg TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d422;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d39;
  reg TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d45;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d108;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d132;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d137;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d141;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d147;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d150;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d153;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d161;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d163;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d165;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d167;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d169;
  reg NOT_eEpoch_read__87_CONCAT_wEpoch_read__88_89__ETC___d433;
  reg TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d512;
  reg TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d514;
  reg TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d526;
  reg TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d528;
  reg TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d532;
  reg TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d544;
  reg TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d546;
  reg TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d548;
  reg TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d550;
  reg TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d558;
  // synopsys translate_on

  // remaining internal signals
  reg [2 : 0] CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7,
	      CASE_decoder_func_32_8_BITS_43_TO_41_0_decoder_ETC__q5,
	      CASE_decoder_func_32_8_BITS_52_TO_50_1_decoder_ETC__q6,
	      CASE_rg_op2_BITS_2_TO_0_0_rg_op2_BITS_2_TO_0_1_ETC__q2,
	      CASE_rg_op2port1__read_BITS_2_TO_0_0_rg_op2p_ETC__q9,
	      IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461;
  reg [1 : 0] CASE_csrs_csr_BITS_198_TO_197_1_csrs_csr_BITS__ETC__q3,
	      CASE_rg_op1_BITS_1_TO_0_0_rg_op1_BITS_1_TO_0_2_ETC__q1,
	      CASE_rg_op1port1__read_BITS_1_TO_0_0_rg_op1p_ETC__q8,
	      IF_wr_csrs_wget__6_BITS_198_TO_197_7_EQ_3_8_OR_ETC___d75;
  wire [74 : 0] decoder_func_32___d88;
  wire [63 : 0] IF_IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_ETC___d304,
		IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d185,
		IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d305,
		SEXT_decoder_func_32_8_BITS_40_TO_9_99___d300,
		_theResult_____1__h4040,
		mtval___1__h4183,
		mtval___1__h4202,
		op1__h5300,
		op2__h5301,
		op4__h5302;
  wire [31 : 0] IF_decoder_func_32_8_BITS_43_TO_41_55_EQ_0_58__ETC___d284,
		decoder_func_32_8_BITS_40_TO_9__q4,
		x_wget_instruction__h3110;
  wire [11 : 0] value__h2862, value__h2866, value__h2870;
  wire [6 : 0] _theResult___fst__h3414,
	       _theResult___fst__h3433,
	       chk_interrupt___d78,
	       func_cause___1__h3332,
	       func_cause___1__h3416,
	       func_cause___1__h3436,
	       func_cause__h2948;
  wire [4 : 0] value__h3301, x1_avValue_op_addr_rs2addr__h3304;
  wire [3 : 0] IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90;
  wire [1 : 0] IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d294;
  wire IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d130,
       IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d136,
       IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205,
       IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219,
       decode_word32___d279,
       eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192,
       rg_step_done__h3408,
       wr_debug_info_whas_AND_registerfile_RDY_read_r_ETC___d16,
       wr_resume_wfi_whas__35_AND_wr_resume_wfi_wget__ETC___d439;

  // action method rx_from_stage1_notEmpty
  assign CAN_FIRE_rx_from_stage1_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_from_stage1_notEmpty = 1'd1 ;

  // action method rx_from_stage1_first_deq_rdy
  assign CAN_FIRE_rx_from_stage1_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_from_stage1_first_deq_rdy = 1'd1 ;

  // action method rx_from_stage1_first
  assign CAN_FIRE_rx_from_stage1_first = 1'd1 ;
  assign WILL_FIRE_rx_from_stage1_first = 1'd1 ;

  // value method rx_from_stage1_deq_ena
  assign rx_from_stage1_deq_ena = rxinst_w_ena_whas ;

  // action method tx_meta_to_stage3_notFull
  assign CAN_FIRE_tx_meta_to_stage3_notFull = 1'd1 ;
  assign WILL_FIRE_tx_meta_to_stage3_notFull = 1'd1 ;

  // action method tx_meta_to_stage3_enq_rdy
  assign CAN_FIRE_tx_meta_to_stage3_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_meta_to_stage3_enq_rdy = 1'd1 ;

  // value method tx_meta_to_stage3_enq_ena
  assign tx_meta_to_stage3_enq_ena = txinst_w_ena_whas ;

  // value method tx_meta_to_stage3_enq_data
  assign tx_meta_to_stage3_enq_data =
	     { tx_meta_w_data_wget[102:32],
	       CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7,
	       tx_meta_w_data_wget[28:0] } ;

  // action method tx_mtval_to_stage3_notFull
  assign CAN_FIRE_tx_mtval_to_stage3_notFull = 1'd1 ;
  assign WILL_FIRE_tx_mtval_to_stage3_notFull = 1'd1 ;

  // action method tx_mtval_to_stage3_enq_rdy
  assign CAN_FIRE_tx_mtval_to_stage3_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_mtval_to_stage3_enq_rdy = 1'd1 ;

  // value method tx_mtval_to_stage3_enq_ena
  assign tx_mtval_to_stage3_enq_ena = txinst_w_ena_whas ;

  // value method tx_mtval_to_stage3_enq_data
  assign tx_mtval_to_stage3_enq_data =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6 &&
	      func_cause__h2948 == 7'd12 &&
	      rx_from_stage1_first_x[16]) ?
	       mtval___1__h4183 :
	       IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d185 ;

  // value method mv_op1
  assign mv_op1 =
	     { rg_op1[70:2],
	       CASE_rg_op1_BITS_1_TO_0_0_rg_op1_BITS_1_TO_0_2_ETC__q1 } ;

  // value method mv_op2
  assign mv_op2 =
	     { rg_op2[71:3],
	       CASE_rg_op2_BITS_2_TO_0_0_rg_op2_BITS_2_TO_0_1_ETC__q2 } ;

  // value method mv_op3
  assign mv_op3 = rg_op3 ;

  // action method rx_inst_notEmpty
  assign CAN_FIRE_rx_inst_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_inst_notEmpty = 1'd1 ;

  // action method rx_inst_first_deq_rdy
  assign CAN_FIRE_rx_inst_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_inst_first_deq_rdy = 1'd1 ;

  // action method rx_inst_first
  assign CAN_FIRE_rx_inst_first = 1'd1 ;
  assign WILL_FIRE_rx_inst_first = 1'd1 ;

  // value method rx_inst_deq_ena
  assign rx_inst_deq_ena = rxinst_w_ena_whas ;

  // action method tx_inst_notFull
  assign CAN_FIRE_tx_inst_notFull = 1'd1 ;
  assign WILL_FIRE_tx_inst_notFull = 1'd1 ;

  // action method tx_inst_enq_rdy
  assign CAN_FIRE_tx_inst_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_inst_enq_rdy = 1'd1 ;

  // value method tx_inst_enq_ena
  assign tx_inst_enq_ena = txinst_w_ena_whas ;

  // value method tx_inst_enq_data
  assign tx_inst_enq_data = rx_inst_first_x ;

  // action method commit_rd
  assign RDY_commit_rd = registerfile_RDY_commit_rd ;
  assign CAN_FIRE_commit_rd = registerfile_RDY_commit_rd ;
  assign WILL_FIRE_commit_rd = EN_commit_rd ;

  // action method csrs
  assign CAN_FIRE_csrs = 1'd1 ;
  assign WILL_FIRE_csrs = EN_csrs ;

  // action method clear_stall
  assign RDY_clear_stall = rg_stall ;
  assign CAN_FIRE_clear_stall = rg_stall ;
  assign WILL_FIRE_clear_stall = EN_clear_stall ;

  // action method update_eEpoch
  assign CAN_FIRE_update_eEpoch = 1'd1 ;
  assign WILL_FIRE_update_eEpoch = EN_update_eEpoch ;

  // action method update_wEpoch
  assign CAN_FIRE_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_update_wEpoch = EN_update_wEpoch ;

  // action method ma_resume_wfi
  assign CAN_FIRE_ma_resume_wfi = 1'd1 ;
  assign WILL_FIRE_ma_resume_wfi = EN_ma_resume_wfi ;

  // actionvalue method debug_access_gprs
  assign debug_access_gprs = registerfile_debug_access_gprs ;
  assign RDY_debug_access_gprs = registerfile_RDY_debug_access_gprs ;
  assign CAN_FIRE_debug_access_gprs = registerfile_RDY_debug_access_gprs ;
  assign WILL_FIRE_debug_access_gprs = EN_debug_access_gprs ;

  // action method debug_status
  assign CAN_FIRE_debug_status = 1'd1 ;
  assign WILL_FIRE_debug_status = 1'd1 ;

  // submodule registerfile
  mkregisterfile #(.hartid(hartid)) registerfile(.CLK(CLK),
						 .RST_N(RST_N),
						 .commit_rd_c(registerfile_commit_rd_c),
						 .debug_access_gprs_cmd(registerfile_debug_access_gprs_cmd),
						 .read_rs1_addr(registerfile_read_rs1_addr),
						 .read_rs1_rs1type(registerfile_read_rs1_rs1type),
						 .read_rs2_addr(registerfile_read_rs2_addr),
						 .read_rs2_rs2type(registerfile_read_rs2_rs2type),
						 .read_rs3_addr(registerfile_read_rs3_addr),
						 .EN_read_rs1(registerfile_EN_read_rs1),
						 .EN_read_rs2(registerfile_EN_read_rs2),
						 .EN_read_rs3(registerfile_EN_read_rs3),
						 .EN_commit_rd(registerfile_EN_commit_rd),
						 .EN_debug_access_gprs(registerfile_EN_debug_access_gprs),
						 .read_rs1(registerfile_read_rs1),
						 .RDY_read_rs1(registerfile_RDY_read_rs1),
						 .read_rs2(registerfile_read_rs2),
						 .RDY_read_rs2(registerfile_RDY_read_rs2),
						 .read_rs3(registerfile_read_rs3),
						 .RDY_read_rs3(registerfile_RDY_read_rs3),
						 .RDY_commit_rd(registerfile_RDY_commit_rd),
						 .debug_access_gprs(registerfile_debug_access_gprs),
						 .RDY_debug_access_gprs(registerfile_RDY_debug_access_gprs));

  // rule RL_decode_and_opfetch
  assign CAN_FIRE_RL_decode_and_opfetch = rxinst_w_ena_whas ;
  assign WILL_FIRE_RL_decode_and_opfetch = rxinst_w_ena_whas ;

  // rule RL_rl_wait_for_interrupt
  assign CAN_FIRE_RL_rl_wait_for_interrupt = rg_wfi ;
  assign WILL_FIRE_RL_rl_wait_for_interrupt = rg_wfi ;

  // inputs to muxes for submodule ports
  assign MUX_rg_rerun_write_1__SEL_1 = EN_clear_stall && clear_stall_upd ;
  assign MUX_rg_wfi_write_1__SEL_1 =
	     WILL_FIRE_RL_decode_and_opfetch &&
	     eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205 ;
  assign MUX_rg_rerun_write_1__VAL_2 =
	     !rg_rerun && decoder_func_32___d88[1] && !EN_update_eEpoch &&
	     !EN_update_wEpoch ;
  assign MUX_rg_stall_write_1__VAL_2 =
	     !EN_update_eEpoch && !EN_update_wEpoch ;

  // inlined wires
  assign tx_meta_w_data_wget =
	     { rx_from_stage1_first_x[121:58],
	       func_cause__h2948,
	       IF_decoder_func_32_8_BITS_43_TO_41_55_EQ_0_58__ETC___d284 } ;
  assign txinst_w_ena_whas =
	     WILL_FIRE_RL_decode_and_opfetch &&
	     eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	     4'd7 ;
  assign rxinst_w_ena_whas =
	     rx_from_stage1_first_deq_rdy_b && rx_inst_first_deq_rdy_b &&
	     EN_csrs &&
	     wr_debug_info_whas_AND_registerfile_RDY_read_r_ETC___d16 &&
	     !rg_stall &&
	     rx_from_stage1_notEmpty_b &&
	     tx_mtval_to_stage3_notFull_b &&
	     !rg_wfi ;
  assign wr_csrs_wget =
	     { CASE_csrs_csr_BITS_198_TO_197_1_csrs_csr_BITS__ETC__q3,
	       csrs_csr[196:0] } ;
  assign rg_op1_port0__write_1 =
	     { value__h3301,
	       op1__h5300,
	       IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d294 } ;
  assign rg_op1_port1__read =
	     txinst_w_ena_whas ? rg_op1_port0__write_1 : rg_op1 ;
  assign rg_op1_EN_port1__write =
	     EN_commit_rd &&
	     commit_rd_commit[69:65] == rg_op1_port1__read[70:66] &&
	     (commit_rd_commit[0] && rg_op1_port1__read[1:0] == 2'd2 ||
	      !commit_rd_commit[0] && rg_op1_port1__read[70:66] != 5'd0 &&
	      rg_op1_port1__read[1:0] != 2'd2) ;
  assign rg_op1_port1__write_1 =
	     { rg_op1_port1__read[70:66],
	       commit_rd_commit[64:1],
	       CASE_rg_op1port1__read_BITS_1_TO_0_0_rg_op1p_ETC__q8 } ;
  assign rg_op1_port2__read =
	     rg_op1_EN_port1__write ?
	       rg_op1_port1__write_1 :
	       rg_op1_port1__read ;
  assign rg_op2_port0__write_1 =
	     { x1_avValue_op_addr_rs2addr__h3304,
	       op2__h5301,
	       (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
		4'd6 &&
		decoder_func_32___d88[52:50] == 3'd4) ?
		 3'd4 :
		 ((IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
		   4'd6 ||
		   decoder_func_32___d88[52:50] == 3'd0) ?
		    3'd0 :
		    CASE_decoder_func_32_8_BITS_52_TO_50_1_decoder_ETC__q6) } ;
  assign rg_op2_port1__read =
	     txinst_w_ena_whas ? rg_op2_port0__write_1 : rg_op2 ;
  assign rg_op2_EN_port1__write =
	     EN_commit_rd &&
	     commit_rd_commit[69:65] == rg_op2_port1__read[71:67] &&
	     (commit_rd_commit[0] && rg_op2_port1__read[2:0] == 3'd4 ||
	      !commit_rd_commit[0] && rg_op2_port1__read[71:67] != 5'd0 &&
	      rg_op2_port1__read[2:0] != 3'd4) ;
  assign rg_op2_port1__write_1 =
	     { rg_op2_port1__read[71:67],
	       commit_rd_commit[64:1],
	       CASE_rg_op2port1__read_BITS_2_TO_0_0_rg_op2p_ETC__q9 } ;
  assign rg_op2_port2__read =
	     rg_op2_EN_port1__write ?
	       rg_op2_port1__write_1 :
	       rg_op2_port1__read ;
  assign rg_op3_port0__write_1 =
	     { op4__h5302,
	       decoder_func_32___d88[59:55],
	       decoder_func_32___d88[49] } ;
  assign rg_op3_port1__read =
	     txinst_w_ena_whas ? rg_op3_port0__write_1 : rg_op3 ;
  assign rg_op3_EN_port1__write =
	     EN_commit_rd &&
	     rg_op3_port1__read[5:1] == commit_rd_commit[69:65] &&
	     rg_op3_port1__read[0] &&
	     commit_rd_commit[0] ;
  assign rg_op3_port1__write_1 =
	     { commit_rd_commit[64:1], rg_op3_port1__read[5:0] } ;
  assign rg_op3_port2__read =
	     rg_op3_EN_port1__write ?
	       rg_op3_port1__write_1 :
	       rg_op3_port1__read ;

  // register eEpoch
  assign eEpoch_D_IN = ~eEpoch ;
  assign eEpoch_EN = EN_update_eEpoch ;

  // register rg_fencei_rerun
  assign rg_fencei_rerun_D_IN =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	     4'd1 &&
	     decoder_func_32___d88[43:41] == 3'd4 ;
  assign rg_fencei_rerun_EN = txinst_w_ena_whas ;

  // register rg_op1
  assign rg_op1_D_IN = rg_op1_port2__read ;
  assign rg_op1_EN = 1'b1 ;

  // register rg_op2
  assign rg_op2_D_IN = rg_op2_port2__read ;
  assign rg_op2_EN = 1'b1 ;

  // register rg_op3
  assign rg_op3_D_IN = rg_op3_port2__read ;
  assign rg_op3_EN = 1'b1 ;

  // register rg_rerun
  assign rg_rerun_D_IN =
	     !MUX_rg_rerun_write_1__SEL_1 && MUX_rg_rerun_write_1__VAL_2 ;
  assign rg_rerun_EN =
	     EN_clear_stall && clear_stall_upd ||
	     WILL_FIRE_RL_decode_and_opfetch &&
	     eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	     4'd7 ;

  // register rg_sfence_rerun
  assign rg_sfence_rerun_D_IN =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	     4'd1 &&
	     decoder_func_32___d88[43:41] != 3'd0 &&
	     decoder_func_32___d88[43:41] != 3'd1 &&
	     decoder_func_32___d88[43:41] != 3'd3 &&
	     decoder_func_32___d88[43:41] != 3'd4 &&
	     decoder_func_32___d88[43:41] != 3'd2 ;
  assign rg_sfence_rerun_EN = txinst_w_ena_whas ;

  // register rg_stall
  assign rg_stall_D_IN =
	     !MUX_rg_rerun_write_1__SEL_1 && MUX_rg_stall_write_1__VAL_2 ;
  assign rg_stall_EN =
	     EN_clear_stall && clear_stall_upd ||
	     WILL_FIRE_RL_decode_and_opfetch &&
	     eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	     4'd6 ;

  // register rg_step_done
  assign rg_step_done_D_IN =
	     !debug_status_status[3] && debug_status_status[2] &&
	     debug_status_status[4] ;
  assign rg_step_done_EN = txinst_w_ena_whas ;

  // register rg_wfi
  assign rg_wfi_D_IN = MUX_rg_wfi_write_1__SEL_1 ;
  assign rg_wfi_EN =
	     WILL_FIRE_RL_decode_and_opfetch &&
	     eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205 ||
	     rg_wfi &&
	     wr_resume_wfi_whas__35_AND_wr_resume_wfi_wget__ETC___d439 ;

  // register wEpoch
  assign wEpoch_D_IN = ~wEpoch ;
  assign wEpoch_EN = EN_update_wEpoch ;

  // submodule registerfile
  assign registerfile_commit_rd_c = commit_rd_commit ;
  assign registerfile_debug_access_gprs_cmd = debug_access_gprs_cmd ;
  assign registerfile_read_rs1_addr = x_wget_instruction__h3110[19:15] ;
  assign registerfile_read_rs1_rs1type =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	     4'd6 &&
	     decoder_func_32___d88[54:53] == 2'd2 ;
  assign registerfile_read_rs2_addr = x_wget_instruction__h3110[24:20] ;
  assign registerfile_read_rs2_rs2type =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	     4'd6 &&
	     decoder_func_32___d88[52:50] == 3'd4 ;
  assign registerfile_read_rs3_addr = x_wget_instruction__h3110[31:27] ;
  assign registerfile_EN_read_rs1 = txinst_w_ena_whas ;
  assign registerfile_EN_read_rs2 = txinst_w_ena_whas ;
  assign registerfile_EN_read_rs3 = txinst_w_ena_whas ;
  assign registerfile_EN_commit_rd = EN_commit_rd ;
  assign registerfile_EN_debug_access_gprs = EN_debug_access_gprs ;

  // remaining internal signals
  module_decode_word32 instance_decode_word32_0(.decode_word32_inst(x_wget_instruction__h3110),
						.decode_word32_misa_c(wr_csrs_wget[101]),
						.decode_word32(decode_word32___d279));
  module_chk_interrupt instance_chk_interrupt_1(.chk_interrupt_prv(IF_wr_csrs_wget__6_BITS_198_TO_197_7_EQ_3_8_OR_ETC___d75),
						.chk_interrupt_mstatus(wr_csrs_wget[98:35]),
						.chk_interrupt_mip(wr_csrs_wget[196:178]),
						.chk_interrupt_mie(wr_csrs_wget[177:161]),
						.chk_interrupt_mideleg(value__h2862),
						.chk_interrupt_sip(value__h2866),
						.chk_interrupt_sie(value__h2870),
						.chk_interrupt_debug(debug_status_status),
						.chk_interrupt_step_done(rg_step_done__h3408),
						.chk_interrupt(chk_interrupt___d78));
  module_decoder_func_32 instance_decoder_func_32_2(.decoder_func_32_inst(x_wget_instruction__h3110),
						    .decoder_func_32_csrs({ IF_wr_csrs_wget__6_BITS_198_TO_197_7_EQ_3_8_OR_ETC___d75,
									    wr_csrs_wget[196:0] }),
						    .decoder_func_32_compressed(rx_from_stage1_first_x[15]),
						    .decoder_func_32(decoder_func_32___d88));
  assign IF_IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_ETC___d304 =
	     (x1_avValue_op_addr_rs2addr__h3304 == 5'd0 &&
	      (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	       4'd6 ||
	       decoder_func_32___d88[52:50] == 3'd0)) ?
	       64'd0 :
	       registerfile_read_rs2 ;
  assign IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d130 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6) ?
	       func_cause__h2948 != 7'd1 && func_cause__h2948 != 7'd12 :
	       decoder_func_32___d88[54:53] == 2'd0 ;
  assign IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d185 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6 &&
	      func_cause__h2948 == 7'd12) ?
	       rx_from_stage1_first_x[121:58] :
	       ((IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
		 4'd6 &&
		 func_cause__h2948 == 7'd2) ?
		  mtval___1__h4202 :
		  64'd0) ;
  assign IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d294 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	      4'd6 &&
	      decoder_func_32___d88[54:53] == 2'd2) ?
	       2'd2 :
	       (IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d130 ?
		  2'd0 :
		  2'd1) ;
  assign IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d305 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	      4'd6 &&
	      decoder_func_32___d88[52:50] == 3'd1) ?
	       SEXT_decoder_func_32_8_BITS_40_TO_9_99___d300 :
	       IF_IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_ETC___d304 ;
  assign IF_decoder_func_32_8_BITS_43_TO_41_55_EQ_0_58__ETC___d284 =
	     { CASE_decoder_func_32_8_BITS_43_TO_41_0_decoder_ETC__q5,
	       IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90,
	       rx_from_stage1_first_x[25:24],
	       decoder_func_32___d88[64:60],
	       decoder_func_32___d88[48],
	       decode_word32___d279,
	       rx_from_stage1_first_x[15:0] } ;
  assign IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d136 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6 ||
	      decoder_func_32___d88[54:53] != 2'd2) &&
	     ((IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	       4'd6) ?
		func_cause__h2948 == 7'd1 || func_cause__h2948 == 7'd12 :
		decoder_func_32___d88[54:53] != 2'd0) ;
  assign IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205 =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	     4'd7 &&
	     !EN_update_eEpoch &&
	     !EN_update_wEpoch ;
  assign IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219 =
	     IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	     4'd7 &&
	     (EN_update_eEpoch || EN_update_wEpoch) ;
  assign IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 =
	     (rg_rerun || chk_interrupt___d78[0] ||
	      rx_from_stage1_first_x[23]) ?
	       4'd6 :
	       decoder_func_32___d88[47:44] ;
  assign SEXT_decoder_func_32_8_BITS_40_TO_9_99___d300 =
	     { {32{decoder_func_32_8_BITS_40_TO_9__q4[31]}},
	       decoder_func_32_8_BITS_40_TO_9__q4 } ;
  assign _theResult_____1__h4040 = tx_mtval_to_stage3_enq_data ;
  assign _theResult___fst__h3414 =
	     chk_interrupt___d78[0] ?
	       func_cause___1__h3416 :
	       _theResult___fst__h3433 ;
  assign _theResult___fst__h3433 =
	     rx_from_stage1_first_x[23] ?
	       func_cause___1__h3436 :
	       decoder_func_32___d88[8:2] ;
  assign decoder_func_32_8_BITS_40_TO_9__q4 = decoder_func_32___d88[40:9] ;
  assign eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 =
	     { eEpoch, wEpoch } == rx_from_stage1_first_x[25:24] ;
  assign func_cause___1__h3332 =
	     rg_fencei_rerun ? 7'd24 : (rg_sfence_rerun ? 7'd25 : 7'd23) ;
  assign func_cause___1__h3416 = { 1'd0, chk_interrupt___d78[6:1] } ;
  assign func_cause___1__h3436 = { 1'd0, rx_from_stage1_first_x[22:17] } ;
  assign func_cause__h2948 =
	     rg_rerun ? func_cause___1__h3332 : _theResult___fst__h3414 ;
  assign mtval___1__h4183 = rx_from_stage1_first_x[121:58] + 64'd2 ;
  assign mtval___1__h4202 = { 32'd0, rx_from_stage1_first_x[57:26] } ;
  assign op1__h5300 =
	     (IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d130 &&
	      value__h3301 == 5'd0) ?
	       64'd0 :
	       registerfile_read_rs1 ;
  assign op2__h5301 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
	      4'd6 &&
	      decoder_func_32___d88[52:50] != 3'd4 &&
	      decoder_func_32___d88[52:50] != 3'd0 &&
	      decoder_func_32___d88[52:50] != 3'd1 &&
	      decoder_func_32___d88[52:50] != 3'd2) ?
	       64'd2 :
	       ((IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 !=
		 4'd6 &&
		 decoder_func_32___d88[52:50] == 3'd2) ?
		  64'd4 :
		  IF_NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0__ETC___d305) ;
  assign op4__h5302 =
	     decoder_func_32___d88[49] ?
	       registerfile_read_rs3 :
	       SEXT_decoder_func_32_8_BITS_40_TO_9_99___d300 ;
  assign rg_step_done__h3408 = rg_step_done ;
  assign value__h2862 = wr_csrs_wget[160:149] ;
  assign value__h2866 = wr_csrs_wget[148:137] ;
  assign value__h2870 = wr_csrs_wget[136:125] ;
  assign value__h3301 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6) ?
	       5'd0 :
	       decoder_func_32___d88[74:70] ;
  assign wr_debug_info_whas_AND_registerfile_RDY_read_r_ETC___d16 =
	     registerfile_RDY_read_rs3 && registerfile_RDY_read_rs2 &&
	     registerfile_RDY_read_rs1 &&
	     tx_meta_to_stage3_enq_rdy_b &&
	     tx_mtval_to_stage3_enq_rdy_b &&
	     tx_inst_enq_rdy_b ;
  assign wr_resume_wfi_whas__35_AND_wr_resume_wfi_wget__ETC___d439 =
	     EN_ma_resume_wfi && ma_resume_wfi_w || EN_update_wEpoch ||
	     EN_update_eEpoch ;
  assign x1_avValue_op_addr_rs2addr__h3304 =
	     (IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 ==
	      4'd6) ?
	       5'd0 :
	       decoder_func_32___d88[69:65] ;
  assign x_wget_instruction__h3110 = rx_from_stage1_first_x[57:26] ;
  always@(rg_op1)
  begin
    case (rg_op1[1:0])
      2'd0, 2'd2:
	  CASE_rg_op1_BITS_1_TO_0_0_rg_op1_BITS_1_TO_0_2_ETC__q1 =
	      rg_op1[1:0];
      default: CASE_rg_op1_BITS_1_TO_0_0_rg_op1_BITS_1_TO_0_2_ETC__q1 = 2'd1;
    endcase
  end
  always@(rg_op2)
  begin
    case (rg_op2[2:0])
      3'd0, 3'd1, 3'd2, 3'd4:
	  CASE_rg_op2_BITS_2_TO_0_0_rg_op2_BITS_2_TO_0_1_ETC__q2 =
	      rg_op2[2:0];
      default: CASE_rg_op2_BITS_2_TO_0_0_rg_op2_BITS_2_TO_0_1_ETC__q2 = 3'd3;
    endcase
  end
  always@(csrs_csr)
  begin
    case (csrs_csr[198:197])
      2'd1, 2'd3:
	  CASE_csrs_csr_BITS_198_TO_197_1_csrs_csr_BITS__ETC__q3 =
	      csrs_csr[198:197];
      default: CASE_csrs_csr_BITS_198_TO_197_1_csrs_csr_BITS__ETC__q3 = 2'd0;
    endcase
  end
  always@(wr_csrs_wget)
  begin
    case (wr_csrs_wget[198:197])
      2'd1, 2'd3:
	  IF_wr_csrs_wget__6_BITS_198_TO_197_7_EQ_3_8_OR_ETC___d75 =
	      wr_csrs_wget[198:197];
      default: IF_wr_csrs_wget__6_BITS_198_TO_197_7_EQ_3_8_OR_ETC___d75 =
		   2'd0;
    endcase
  end
  always@(decoder_func_32___d88)
  begin
    case (decoder_func_32___d88[43:41])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_decoder_func_32_8_BITS_43_TO_41_0_decoder_ETC__q5 =
	      decoder_func_32___d88[43:41];
      default: CASE_decoder_func_32_8_BITS_43_TO_41_0_decoder_ETC__q5 = 3'd5;
    endcase
  end
  always@(decoder_func_32___d88)
  begin
    case (decoder_func_32___d88[52:50])
      3'd1, 3'd2:
	  CASE_decoder_func_32_8_BITS_52_TO_50_1_decoder_ETC__q6 =
	      decoder_func_32___d88[52:50];
      default: CASE_decoder_func_32_8_BITS_52_TO_50_1_decoder_ETC__q6 = 3'd3;
    endcase
  end
  always@(tx_meta_w_data_wget)
  begin
    case (tx_meta_w_data_wget[31:29])
      3'd0, 3'd1:
	  IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461 =
	      tx_meta_w_data_wget[31:29];
      3'd2: IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461 = 3'd4;
      3'd3: IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461 = 3'd2;
      3'd4: IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461 = 3'd3;
      default: IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461 =
		   3'd5;
    endcase
  end
  always@(IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461)
  begin
    case (IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461)
      3'd0, 3'd1:
	  CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7 =
	      IF_tx_meta_w_data_whas__44_THEN_IF_tx_meta_w_d_ETC___d461;
      3'd2: CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7 = 3'd3;
      3'd3: CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7 = 3'd4;
      3'd4: CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7 = 3'd2;
      default: CASE_IF_tx_meta_w_data_whas__44_THEN_IF_tx_met_ETC__q7 = 3'd5;
    endcase
  end
  always@(rg_op1_port1__read)
  begin
    case (rg_op1_port1__read[1:0])
      2'd0, 2'd2:
	  CASE_rg_op1port1__read_BITS_1_TO_0_0_rg_op1p_ETC__q8 =
	      rg_op1_port1__read[1:0];
      default: CASE_rg_op1port1__read_BITS_1_TO_0_0_rg_op1p_ETC__q8 = 2'd1;
    endcase
  end
  always@(rg_op2_port1__read)
  begin
    case (rg_op2_port1__read[2:0])
      3'd0, 3'd1, 3'd2, 3'd4:
	  CASE_rg_op2port1__read_BITS_2_TO_0_0_rg_op2p_ETC__q9 =
	      rg_op2_port1__read[2:0];
      default: CASE_rg_op2port1__read_BITS_2_TO_0_0_rg_op2p_ETC__q9 = 3'd3;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_fencei_rerun <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_op1 <= `BSV_ASSIGNMENT_DELAY 71'd0;
	rg_op2 <= `BSV_ASSIGNMENT_DELAY 72'd0;
	rg_op3 <= `BSV_ASSIGNMENT_DELAY 70'd0;
	rg_rerun <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_sfence_rerun <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_step_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wfi <= `BSV_ASSIGNMENT_DELAY 1'd0;
	wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (eEpoch_EN) eEpoch <= `BSV_ASSIGNMENT_DELAY eEpoch_D_IN;
	if (rg_fencei_rerun_EN)
	  rg_fencei_rerun <= `BSV_ASSIGNMENT_DELAY rg_fencei_rerun_D_IN;
	if (rg_op1_EN) rg_op1 <= `BSV_ASSIGNMENT_DELAY rg_op1_D_IN;
	if (rg_op2_EN) rg_op2 <= `BSV_ASSIGNMENT_DELAY rg_op2_D_IN;
	if (rg_op3_EN) rg_op3 <= `BSV_ASSIGNMENT_DELAY rg_op3_D_IN;
	if (rg_rerun_EN) rg_rerun <= `BSV_ASSIGNMENT_DELAY rg_rerun_D_IN;
	if (rg_sfence_rerun_EN)
	  rg_sfence_rerun <= `BSV_ASSIGNMENT_DELAY rg_sfence_rerun_D_IN;
	if (rg_stall_EN) rg_stall <= `BSV_ASSIGNMENT_DELAY rg_stall_D_IN;
	if (rg_step_done_EN)
	  rg_step_done <= `BSV_ASSIGNMENT_DELAY rg_step_done_D_IN;
	if (rg_wfi_EN) rg_wfi <= `BSV_ASSIGNMENT_DELAY rg_wfi_D_IN;
	if (wEpoch_EN) wEpoch <= `BSV_ASSIGNMENT_DELAY wEpoch_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    eEpoch = 1'h0;
    rg_fencei_rerun = 1'h0;
    rg_op1 = 71'h2AAAAAAAAAAAAAAAAA;
    rg_op2 = 72'hAAAAAAAAAAAAAAAAAA;
    rg_op3 = 70'h2AAAAAAAAAAAAAAAAA;
    rg_rerun = 1'h0;
    rg_sfence_rerun = 1'h0;
    rg_stall = 1'h0;
    rg_step_done = 1'h0;
    rg_wfi = 1'h0;
    wEpoch = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d30 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d31 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d32 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d41 =
	(TASK_testplusargs___d30 ||
	 TASK_testplusargs___d31 && TASK_testplusargs___d32) &&
	wr_csrs_wget[198:197] == 2'd1;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d39 =
	(TASK_testplusargs___d30 ||
	 TASK_testplusargs___d31 && TASK_testplusargs___d32) &&
	wr_csrs_wget[198:197] == 2'd3;
    TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d45 =
	(TASK_testplusargs___d30 ||
	 TASK_testplusargs___d31 && TASK_testplusargs___d32) &&
	wr_csrs_wget[198:197] != 2'd3 &&
	wr_csrs_wget[198:197] != 2'd1;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  v__h2722 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("[%10d", v__h2722, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("core:%2d ", hartid, "STAGE2: csrs:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("CSRtoDecode { ", "prv: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d39)
	$write("Machine");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d41)
	$write("Supervisor");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_0_OR_TASK_testplusargs_1_AND_ETC___d45)
	$write("User");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_mip: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[196:178]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_mie: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[177:161]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_mideleg: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[160:149]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_sip: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[148:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_sie: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[136:125]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_misa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[124:99]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_mstatus: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[98:35]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "frm: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[34:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write(", ", "csr_dcsr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("'h%h", wr_csrs_wget[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d30 ||
	   TASK_testplusargs___d31 && TASK_testplusargs___d32))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d55 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d56 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d57 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  v__h3042 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d55 ||
	   TASK_testplusargs___d56 && TASK_testplusargs___d57))
	$write("[%10d", v__h3042, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d55 ||
	   TASK_testplusargs___d56 && TASK_testplusargs___d57))
	$write("core:%2d ",
	       hartid,
	       "STAGE2 : PC:%h Instruction:%h",
	       rx_from_stage1_first_x[121:58],
	       rx_from_stage1_first_x[57:26]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d55 ||
	   TASK_testplusargs___d56 && TASK_testplusargs___d57))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d67 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d68 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d69 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  v__h3247 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("[%10d", v__h3247, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("core:%2d ", hartid, "STAGE2 : OpAddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("OpAddr { ", "rs1addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("'h%h", value__h3301);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write(", ", "rs2addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("'h%h", x1_avValue_op_addr_rs2addr__h3304);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("'h%h", decoder_func_32___d88[64:60]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write(", ", "rs3addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("'h%h", decoder_func_32___d88[59:55], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d67 ||
	   TASK_testplusargs___d68 && TASK_testplusargs___d69))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d98 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d99 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d100 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d108 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	decoder_func_32___d88[54:53] == 2'd2;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d132 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	(IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd6 ||
	 decoder_func_32___d88[54:53] != 2'd2) &&
	IF_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_ETC___d130;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d137 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d136;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d141 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	decoder_func_32___d88[52:50] == 3'd4;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d147 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	(IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd6 ||
	 decoder_func_32___d88[52:50] == 3'd0);
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d150 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	decoder_func_32___d88[52:50] == 3'd1;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d153 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	decoder_func_32___d88[52:50] == 3'd2;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d161 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	decoder_func_32___d88[52:50] != 3'd4 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	decoder_func_32___d88[52:50] != 3'd0 &&
	decoder_func_32___d88[52:50] != 3'd1 &&
	decoder_func_32___d88[52:50] != 3'd2;
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d163 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	decoder_func_32___d88[49];
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d165 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	!decoder_func_32___d88[49];
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d167 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	decoder_func_32___d88[48];
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d169 =
	(TASK_testplusargs___d98 ||
	 TASK_testplusargs___d99 && TASK_testplusargs___d100) &&
	!decoder_func_32___d88[48];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  v__h3683 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write("[%10d", v__h3683, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write("core:%2d ", hartid, "STAGE2 : OpType: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write("OpType { ", "rs1type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d108)
	$write("FloatingRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d132)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d137)
	$write("PC");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write(", ", "rs2type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d141)
	$write("FloatingRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d147)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d150)
	$write("Immediate");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d153)
	$write("Constant4");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d161)
	$write("Constant2");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write(", ", "rs3type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d163)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d165)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d167)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d169)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d98 ||
	   TASK_testplusargs___d99 && TASK_testplusargs___d100))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d170 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d171 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  TASK_testplusargs___d172 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch)
	begin
	  v__h4107 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d170 ||
	   TASK_testplusargs___d171 && TASK_testplusargs___d172))
	$write("[%10d", v__h4107, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d170 ||
	   TASK_testplusargs___d171 && TASK_testplusargs___d172))
	$write("core:%2d ",
	       hartid,
	       "STAGE2: BadAddress(MTVAL): %h",
	       _theResult_____1__h4040);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  (TASK_testplusargs___d170 ||
	   TASK_testplusargs___d171 && TASK_testplusargs___d172))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205)
	begin
	  TASK_testplusargs___d207 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205)
	begin
	  TASK_testplusargs___d208 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205)
	begin
	  TASK_testplusargs___d209 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_flush_from_exe_whas__94_95_OR_NOT_wr_fl_ETC___d212 =
	!EN_update_eEpoch && !EN_update_wEpoch &&
	(TASK_testplusargs___d207 ||
	 TASK_testplusargs___d208 && TASK_testplusargs___d209);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d205)
	begin
	  v__h4572 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  NOT_wr_flush_from_exe_whas__94_95_OR_NOT_wr_fl_ETC___d212)
	$write("[%10d", v__h4572, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  NOT_wr_flush_from_exe_whas__94_95_OR_NOT_wr_fl_ETC___d212)
	$write("core:%2d ", hartid, "STAGE2 : Encountered WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  NOT_wr_flush_from_exe_whas__94_95_OR_NOT_wr_fl_ETC___d212)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219)
	begin
	  TASK_testplusargs___d221 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219)
	begin
	  TASK_testplusargs___d222 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219)
	begin
	  TASK_testplusargs___d223 = $test$plusargs("l0");
	  #0;
	end
    wr_flush_from_exe_whas__94_AND_wr_flush_from_e_ETC___d226 =
	(EN_update_eEpoch || EN_update_wEpoch) &&
	(TASK_testplusargs___d221 ||
	 TASK_testplusargs___d222 && TASK_testplusargs___d223);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d219)
	begin
	  v__h4755 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  wr_flush_from_exe_whas__94_AND_wr_flush_from_e_ETC___d226)
	$write("[%10d", v__h4755, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  wr_flush_from_exe_whas__94_AND_wr_flush_from_e_ETC___d226)
	$write("core:%2d ", hartid, "STAGE2 : Dropping WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd7 &&
	  wr_flush_from_exe_whas__94_AND_wr_flush_from_e_ETC___d226)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d232 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d233 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d234 = $test$plusargs("l0");
	  #0;
	end
    NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d237 =
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	(TASK_testplusargs___d232 ||
	 TASK_testplusargs___d233 && TASK_testplusargs___d234);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  v__h4946 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d237)
	$write("[%10d", v__h4946, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d237)
	$write("core:%2d ", hartid, "STAGE2: step_done:%b", rg_step_done);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d237)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d317 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d318 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  TASK_testplusargs___d319 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322 =
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319);
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d325 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] == 3'd0;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d328 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] == 3'd1;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d331 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] == 3'd3;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d334 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] == 3'd4;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d337 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] == 3'd2;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d340 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[43:41] != 3'd0 &&
	decoder_func_32___d88[43:41] != 3'd1 &&
	decoder_func_32___d88[43:41] != 3'd3 &&
	decoder_func_32___d88[43:41] != 3'd4 &&
	decoder_func_32___d88[43:41] != 3'd2;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d344 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd0;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d346 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd1;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d349 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd2;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d352 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd3;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d355 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd4;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d358 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd5;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d360 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd6;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d363 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 == 4'd8;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d379 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd0 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd1 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd2 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd3 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd4 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd5 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd6 &&
	IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd8;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d382 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decoder_func_32___d88[48];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d385 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	!decoder_func_32___d88[48];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d388 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	decode_word32___d279;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d392 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	!decode_word32___d279;
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d397 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	!rx_from_stage1_first_x[15];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d400 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	rx_from_stage1_first_x[15];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d408 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	!rx_from_stage1_first_x[12];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d412 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	rx_from_stage1_first_x[12];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d418 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	!rx_from_stage1_first_x[11];
    TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d422 =
	(TASK_testplusargs___d317 ||
	 TASK_testplusargs___d318 && TASK_testplusargs___d319) &&
	rx_from_stage1_first_x[11];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7)
	begin
	  v__h6218 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("[%10d", v__h6218, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("core:%2d ", hartid, "STAGE2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("Stage3Meta { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", rx_from_stage1_first_x[121:58]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "funct: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", func_cause__h2948);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "memaccess: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d325)
	$write("Load");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d328)
	$write("Store");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d331)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d334)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d337)
	$write("Atomic");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d340)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "inst_type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d344)
	$write("ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d346)
	$write("MEMORY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d349)
	$write("BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d352)
	$write("JAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d355)
	$write("JALR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d358)
	$write("SYSTEM_INSTR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d360)
	$write("TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d363)
	$write("FLOAT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d379)
	$write("MULDIV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", rx_from_stage1_first_x[25:24]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", decoder_func_32___d88[64:60]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d382)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d385)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "word32: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d388)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d392)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "compressed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d397)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d400)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", rx_from_stage1_first_x[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d408)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d412)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d418)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_OR_IF_ETC___d90 != 4'd7 &&
	  TASK_testplusargs_17_OR_TASK_testplusargs_18_A_ETC___d422)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("'h%h", rx_from_stage1_first_x[10:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	  NOT_IF_rg_rerun_3_OR_chk_interrupt_8_BIT_0_9_O_ETC___d322)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  !eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192)
	begin
	  TASK_testplusargs___d428 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  !eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192)
	begin
	  TASK_testplusargs___d429 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  !eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192)
	begin
	  TASK_testplusargs___d430 = $test$plusargs("l0");
	  #0;
	end
    NOT_eEpoch_read__87_CONCAT_wEpoch_read__88_89__ETC___d433 =
	!eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192 &&
	(TASK_testplusargs___d428 ||
	 TASK_testplusargs___d429 && TASK_testplusargs___d430);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  !eEpoch_read__87_CONCAT_wEpoch_read__88_89_EQ_I_ETC___d192)
	begin
	  v__h4341 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  NOT_eEpoch_read__87_CONCAT_wEpoch_read__88_89__ETC___d433)
	$write("[%10d", v__h4341, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  NOT_eEpoch_read__87_CONCAT_wEpoch_read__88_89__ETC___d433)
	$write("core:%2d ",
	       hartid,
	       "STAGE2 : Dropping Instruction due to epoch mis - match");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decode_and_opfetch &&
	  NOT_eEpoch_read__87_CONCAT_wEpoch_read__88_89__ETC___d433)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d503 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d504 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d505 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d512 =
	(TASK_testplusargs___d503 ||
	 TASK_testplusargs___d504 && TASK_testplusargs___d505) &&
	commit_rd_commit[0];
    TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d514 =
	(TASK_testplusargs___d503 ||
	 TASK_testplusargs___d504 && TASK_testplusargs___d505) &&
	!commit_rd_commit[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  v__h7614 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("[%10d", v__h7614, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("core:%2d ", hartid, "STAGE2: Commit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("CommitData { ", "addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("'h%h", commit_rd_commit[69:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write(", ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("'h%h", commit_rd_commit[64:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d512)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_03_OR_TASK_testplusargs_04_A_ETC___d514)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d503 ||
	   TASK_testplusargs___d504 && TASK_testplusargs___d505))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d515 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d516 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d517 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d526 =
	(TASK_testplusargs___d515 ||
	 TASK_testplusargs___d516 && TASK_testplusargs___d517) &&
	rg_op1_port1__read[1:0] == 2'd2;
    TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d528 =
	(TASK_testplusargs___d515 ||
	 TASK_testplusargs___d516 && TASK_testplusargs___d517) &&
	rg_op1_port1__read[1:0] == 2'd0;
    TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d532 =
	(TASK_testplusargs___d515 ||
	 TASK_testplusargs___d516 && TASK_testplusargs___d517) &&
	rg_op1_port1__read[1:0] != 2'd2 &&
	rg_op1_port1__read[1:0] != 2'd0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  v__h7783 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("[%10d", v__h7783, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("core:%2d ", hartid, "STAGE2: RgOp1: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("RFOp1 { ", "addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("'h%h", rg_op1_port1__read[70:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write(", ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("'h%h", rg_op1_port1__read[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write(", ", "optype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d526)
	$write("FloatingRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d528)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_15_OR_TASK_testplusargs_16_A_ETC___d532)
	$write("PC");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d515 ||
	   TASK_testplusargs___d516 && TASK_testplusargs___d517))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d533 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d534 = $test$plusargs("mstage2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  TASK_testplusargs___d535 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d544 =
	(TASK_testplusargs___d533 ||
	 TASK_testplusargs___d534 && TASK_testplusargs___d535) &&
	rg_op2_port1__read[2:0] == 3'd4;
    TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d546 =
	(TASK_testplusargs___d533 ||
	 TASK_testplusargs___d534 && TASK_testplusargs___d535) &&
	rg_op2_port1__read[2:0] == 3'd0;
    TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d548 =
	(TASK_testplusargs___d533 ||
	 TASK_testplusargs___d534 && TASK_testplusargs___d535) &&
	rg_op2_port1__read[2:0] == 3'd1;
    TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d550 =
	(TASK_testplusargs___d533 ||
	 TASK_testplusargs___d534 && TASK_testplusargs___d535) &&
	rg_op2_port1__read[2:0] == 3'd2;
    TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d558 =
	(TASK_testplusargs___d533 ||
	 TASK_testplusargs___d534 && TASK_testplusargs___d535) &&
	rg_op2_port1__read[2:0] != 3'd4 &&
	rg_op2_port1__read[2:0] != 3'd0 &&
	rg_op2_port1__read[2:0] != 3'd1 &&
	rg_op2_port1__read[2:0] != 3'd2;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd)
	begin
	  v__h8012 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("[%10d", v__h8012, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("core:%2d ", hartid, "STAGE2: RgOp2: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("RFOp2 { ", "addr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("'h%h", rg_op2_port1__read[71:67]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write(", ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("'h%h", rg_op2_port1__read[66:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write(", ", "optype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d544)
	$write("FloatingRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d546)
	$write("IntegerRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d548)
	$write("Immediate");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d550)
	$write("Constant4");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  TASK_testplusargs_33_OR_TASK_testplusargs_34_A_ETC___d558)
	$write("Constant2");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_commit_rd &&
	  (TASK_testplusargs___d533 ||
	   TASK_testplusargs___d534 && TASK_testplusargs___d535))
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage2

