//
// Generated by Bluespec Compiler (build a026416)
//
// On Tue Jun 16 00:03:12 IST 2020
//
//
// Ports:
// Name                         I/O  size props
// rx_in_deq_ena                  O     1
// rx_inst_deq_ena                O     1
// commit_rd                      O    71
// RDY_commit_rd                  O     1 const
// flush_fst                      O     1
// RDY_flush_fst                  O     1 const
// flush_snd_fst                  O    64
// RDY_flush_snd_fst              O     1 const
// flush_snd_snd_fst              O     1
// RDY_flush_snd_snd_fst          O     1 const
// flush_snd_snd_snd              O     1
// RDY_flush_snd_snd_snd          O     1 const
// mv_csrs_to_decode              O   199
// RDY_mv_csrs_to_decode          O     1 const
// RDY_ma_clint_msip              O     1 const
// RDY_ma_clint_mtip              O     1 const
// RDY_ma_clint_mtime             O     1 const
// dump_get                       O   168
// RDY_dump_get                   O     1 reg
// mv_csr_satp                    O    64
// RDY_mv_csr_satp                O     1 const
// RDY_ma_set_external_interrupt  O     1 const
// mv_csr_misa_c                  O     1 reg
// RDY_mv_csr_misa_c              O     1 const
// initiate_store_fst             O     1
// RDY_initiate_store_fst         O     1 const
// initiate_store_snd             O     1
// RDY_initiate_store_snd         O     1 const
// RDY_write_resp                 O     1 const
// mv_cacheenable                 O     3 reg
// RDY_mv_cacheenable             O     1 const
// mv_curr_priv                   O     2
// RDY_mv_curr_priv               O     1 const
// mv_csr_mstatus                 O    64
// RDY_mv_csr_mstatus             O     1 const
// mv_resume_wfi                  O     1
// RDY_mv_resume_wfi              O     1 const
// RDY_ma_debug_access_csrs       O     1
// RDY_ma_debug_halt_request      O     1 const
// RDY_ma_debug_resume_request    O     1 const
// mv_core_is_halted              O     1 reg
// RDY_mv_core_is_halted          O     1 const
// mv_step_is_set                 O     1 reg
// RDY_mv_step_is_set             O     1 const
// mv_step_ie                     O     1 reg
// RDY_mv_step_ie                 O     1 const
// mv_core_debugenable            O     1 reg
// RDY_mv_core_debugenable        O     1 const
// mv_resp_to_core                O    65
// RDY_mv_resp_to_core            O     1 const
// RDY_ma_events_grp4             O     1 const
// RDY_ma_events_grp5             O     1 const
// RDY_ma_events_grp6             O     1 const
// RDY_ma_events_grp7             O     1 const
// mv_count_exceptions            O     1
// RDY_mv_count_exceptions        O     1 const
// mv_count_interrupts            O     1
// RDY_mv_count_interrupts        O     1 const
// mv_count_csrops                O     1
// RDY_mv_count_csrops            O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_in_notEmpty_b               I     1 unused
// rx_in_first_deq_rdy_b          I     1
// rx_in_first_x                  I   137
// rx_inst_notEmpty_b             I     1 unused
// rx_inst_first_deq_rdy_b        I     1
// rx_inst_first_x                I    96
// ma_clint_msip_intrpt           I     1 reg
// ma_clint_mtip_intrpt           I     1 reg
// ma_clint_mtime_c_mtime         I    64 reg
// ma_set_external_interrupt_ex_i  I     1 reg
// write_resp_r                   I    66
// store_is_cached_c              I     1
// ma_debug_access_csrs_cmd       I    80
// ma_debug_halt_request_ip       I     1 reg
// ma_debug_resume_request_ip     I     1 reg
// ma_events_grp4_e               I    30
// ma_events_grp5_e               I    30
// ma_events_grp6_e               I    30
// ma_events_grp7_e               I    30
// EN_ma_clint_msip               I     1
// EN_ma_clint_mtip               I     1
// EN_ma_clint_mtime              I     1
// EN_ma_set_external_interrupt   I     1
// EN_write_resp                  I     1
// EN_ma_debug_access_csrs        I     1
// EN_ma_debug_halt_request       I     1
// EN_ma_debug_resume_request     I     1
// EN_ma_events_grp4              I     1
// EN_ma_events_grp5              I     1
// EN_ma_events_grp6              I     1
// EN_ma_events_grp7              I     1
// EN_dump_get                    I     1
//
// Combinational paths from inputs to outputs:
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> rx_in_deq_ena
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> rx_inst_deq_ena
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> commit_rd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> flush_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> flush_snd_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> flush_snd_snd_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    ma_debug_access_csrs_cmd,
//    EN_write_resp,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> flush_snd_snd_snd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> initiate_store_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> initiate_store_snd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    ma_debug_access_csrs_cmd,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> mv_resp_to_core
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> mv_count_exceptions
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> mv_count_interrupts
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    ma_debug_access_csrs_cmd,
//    EN_ma_debug_access_csrs,
//    EN_dump_get) -> mv_count_csrops
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage5(CLK,
		RST_N,

		rx_in_notEmpty_b,

		rx_in_first_deq_rdy_b,

		rx_in_first_x,

		rx_in_deq_ena,

		rx_inst_notEmpty_b,

		rx_inst_first_deq_rdy_b,

		rx_inst_first_x,

		rx_inst_deq_ena,

		commit_rd,
		RDY_commit_rd,

		flush_fst,
		RDY_flush_fst,

		flush_snd_fst,
		RDY_flush_snd_fst,

		flush_snd_snd_fst,
		RDY_flush_snd_snd_fst,

		flush_snd_snd_snd,
		RDY_flush_snd_snd_snd,

		mv_csrs_to_decode,
		RDY_mv_csrs_to_decode,

		ma_clint_msip_intrpt,
		EN_ma_clint_msip,
		RDY_ma_clint_msip,

		ma_clint_mtip_intrpt,
		EN_ma_clint_mtip,
		RDY_ma_clint_mtip,

		ma_clint_mtime_c_mtime,
		EN_ma_clint_mtime,
		RDY_ma_clint_mtime,

		EN_dump_get,
		dump_get,
		RDY_dump_get,

		mv_csr_satp,
		RDY_mv_csr_satp,

		ma_set_external_interrupt_ex_i,
		EN_ma_set_external_interrupt,
		RDY_ma_set_external_interrupt,

		mv_csr_misa_c,
		RDY_mv_csr_misa_c,

		initiate_store_fst,
		RDY_initiate_store_fst,

		initiate_store_snd,
		RDY_initiate_store_snd,

		write_resp_r,
		EN_write_resp,
		RDY_write_resp,

		store_is_cached_c,

		mv_cacheenable,
		RDY_mv_cacheenable,

		mv_curr_priv,
		RDY_mv_curr_priv,

		mv_csr_mstatus,
		RDY_mv_csr_mstatus,

		mv_resume_wfi,
		RDY_mv_resume_wfi,

		ma_debug_access_csrs_cmd,
		EN_ma_debug_access_csrs,
		RDY_ma_debug_access_csrs,

		ma_debug_halt_request_ip,
		EN_ma_debug_halt_request,
		RDY_ma_debug_halt_request,

		ma_debug_resume_request_ip,
		EN_ma_debug_resume_request,
		RDY_ma_debug_resume_request,

		mv_core_is_halted,
		RDY_mv_core_is_halted,

		mv_step_is_set,
		RDY_mv_step_is_set,

		mv_step_ie,
		RDY_mv_step_ie,

		mv_core_debugenable,
		RDY_mv_core_debugenable,

		mv_resp_to_core,
		RDY_mv_resp_to_core,

		ma_events_grp4_e,
		EN_ma_events_grp4,
		RDY_ma_events_grp4,

		ma_events_grp5_e,
		EN_ma_events_grp5,
		RDY_ma_events_grp5,

		ma_events_grp6_e,
		EN_ma_events_grp6,
		RDY_ma_events_grp6,

		ma_events_grp7_e,
		EN_ma_events_grp7,
		RDY_ma_events_grp7,

		mv_count_exceptions,
		RDY_mv_count_exceptions,

		mv_count_interrupts,
		RDY_mv_count_interrupts,

		mv_count_csrops,
		RDY_mv_count_csrops);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method rx_in_notEmpty
  input  rx_in_notEmpty_b;

  // action method rx_in_first_deq_rdy
  input  rx_in_first_deq_rdy_b;

  // action method rx_in_first
  input  [136 : 0] rx_in_first_x;

  // value method rx_in_deq_ena
  output rx_in_deq_ena;

  // action method rx_inst_notEmpty
  input  rx_inst_notEmpty_b;

  // action method rx_inst_first_deq_rdy
  input  rx_inst_first_deq_rdy_b;

  // action method rx_inst_first
  input  [95 : 0] rx_inst_first_x;

  // value method rx_inst_deq_ena
  output rx_inst_deq_ena;

  // value method commit_rd
  output [70 : 0] commit_rd;
  output RDY_commit_rd;

  // value method flush_fst
  output flush_fst;
  output RDY_flush_fst;

  // value method flush_snd_fst
  output [63 : 0] flush_snd_fst;
  output RDY_flush_snd_fst;

  // value method flush_snd_snd_fst
  output flush_snd_snd_fst;
  output RDY_flush_snd_snd_fst;

  // value method flush_snd_snd_snd
  output flush_snd_snd_snd;
  output RDY_flush_snd_snd_snd;

  // value method mv_csrs_to_decode
  output [198 : 0] mv_csrs_to_decode;
  output RDY_mv_csrs_to_decode;

  // action method ma_clint_msip
  input  ma_clint_msip_intrpt;
  input  EN_ma_clint_msip;
  output RDY_ma_clint_msip;

  // action method ma_clint_mtip
  input  ma_clint_mtip_intrpt;
  input  EN_ma_clint_mtip;
  output RDY_ma_clint_mtip;

  // action method ma_clint_mtime
  input  [63 : 0] ma_clint_mtime_c_mtime;
  input  EN_ma_clint_mtime;
  output RDY_ma_clint_mtime;

  // actionvalue method dump_get
  input  EN_dump_get;
  output [167 : 0] dump_get;
  output RDY_dump_get;

  // value method mv_csr_satp
  output [63 : 0] mv_csr_satp;
  output RDY_mv_csr_satp;

  // action method ma_set_external_interrupt
  input  ma_set_external_interrupt_ex_i;
  input  EN_ma_set_external_interrupt;
  output RDY_ma_set_external_interrupt;

  // value method mv_csr_misa_c
  output mv_csr_misa_c;
  output RDY_mv_csr_misa_c;

  // value method initiate_store_fst
  output initiate_store_fst;
  output RDY_initiate_store_fst;

  // value method initiate_store_snd
  output initiate_store_snd;
  output RDY_initiate_store_snd;

  // action method write_resp
  input  [65 : 0] write_resp_r;
  input  EN_write_resp;
  output RDY_write_resp;

  // action method store_is_cached
  input  store_is_cached_c;

  // value method mv_cacheenable
  output [2 : 0] mv_cacheenable;
  output RDY_mv_cacheenable;

  // value method mv_curr_priv
  output [1 : 0] mv_curr_priv;
  output RDY_mv_curr_priv;

  // value method mv_csr_mstatus
  output [63 : 0] mv_csr_mstatus;
  output RDY_mv_csr_mstatus;

  // value method mv_resume_wfi
  output mv_resume_wfi;
  output RDY_mv_resume_wfi;

  // action method ma_debug_access_csrs
  input  [79 : 0] ma_debug_access_csrs_cmd;
  input  EN_ma_debug_access_csrs;
  output RDY_ma_debug_access_csrs;

  // action method ma_debug_halt_request
  input  ma_debug_halt_request_ip;
  input  EN_ma_debug_halt_request;
  output RDY_ma_debug_halt_request;

  // action method ma_debug_resume_request
  input  ma_debug_resume_request_ip;
  input  EN_ma_debug_resume_request;
  output RDY_ma_debug_resume_request;

  // value method mv_core_is_halted
  output mv_core_is_halted;
  output RDY_mv_core_is_halted;

  // value method mv_step_is_set
  output mv_step_is_set;
  output RDY_mv_step_is_set;

  // value method mv_step_ie
  output mv_step_ie;
  output RDY_mv_step_ie;

  // value method mv_core_debugenable
  output mv_core_debugenable;
  output RDY_mv_core_debugenable;

  // value method mv_resp_to_core
  output [64 : 0] mv_resp_to_core;
  output RDY_mv_resp_to_core;

  // action method ma_events_grp4
  input  [29 : 0] ma_events_grp4_e;
  input  EN_ma_events_grp4;
  output RDY_ma_events_grp4;

  // action method ma_events_grp5
  input  [29 : 0] ma_events_grp5_e;
  input  EN_ma_events_grp5;
  output RDY_ma_events_grp5;

  // action method ma_events_grp6
  input  [29 : 0] ma_events_grp6_e;
  input  EN_ma_events_grp6;
  output RDY_ma_events_grp6;

  // action method ma_events_grp7
  input  [29 : 0] ma_events_grp7_e;
  input  EN_ma_events_grp7;
  output RDY_ma_events_grp7;

  // value method mv_count_exceptions
  output mv_count_exceptions;
  output RDY_mv_count_exceptions;

  // value method mv_count_interrupts
  output mv_count_interrupts;
  output RDY_mv_count_interrupts;

  // value method mv_count_csrops
  output mv_count_csrops;
  output RDY_mv_count_csrops;

  // signals for module outputs
  wire [198 : 0] mv_csrs_to_decode;
  wire [167 : 0] dump_get;
  wire [70 : 0] commit_rd;
  wire [64 : 0] mv_resp_to_core;
  wire [63 : 0] flush_snd_fst, mv_csr_mstatus, mv_csr_satp;
  wire [2 : 0] mv_cacheenable;
  wire [1 : 0] mv_curr_priv;
  wire RDY_commit_rd,
       RDY_dump_get,
       RDY_flush_fst,
       RDY_flush_snd_fst,
       RDY_flush_snd_snd_fst,
       RDY_flush_snd_snd_snd,
       RDY_initiate_store_fst,
       RDY_initiate_store_snd,
       RDY_ma_clint_msip,
       RDY_ma_clint_mtime,
       RDY_ma_clint_mtip,
       RDY_ma_debug_access_csrs,
       RDY_ma_debug_halt_request,
       RDY_ma_debug_resume_request,
       RDY_ma_events_grp4,
       RDY_ma_events_grp5,
       RDY_ma_events_grp6,
       RDY_ma_events_grp7,
       RDY_ma_set_external_interrupt,
       RDY_mv_cacheenable,
       RDY_mv_core_debugenable,
       RDY_mv_core_is_halted,
       RDY_mv_count_csrops,
       RDY_mv_count_exceptions,
       RDY_mv_count_interrupts,
       RDY_mv_csr_misa_c,
       RDY_mv_csr_mstatus,
       RDY_mv_csr_satp,
       RDY_mv_csrs_to_decode,
       RDY_mv_curr_priv,
       RDY_mv_resp_to_core,
       RDY_mv_resume_wfi,
       RDY_mv_step_ie,
       RDY_mv_step_is_set,
       RDY_write_resp,
       flush_fst,
       flush_snd_snd_fst,
       flush_snd_snd_snd,
       initiate_store_fst,
       initiate_store_snd,
       mv_core_debugenable,
       mv_core_is_halted,
       mv_count_csrops,
       mv_count_exceptions,
       mv_count_interrupts,
       mv_csr_misa_c,
       mv_resume_wfi,
       mv_step_ie,
       mv_step_is_set,
       rx_in_deq_ena,
       rx_inst_deq_ena;

  // inlined wires
  wire [136 : 0] rx_w_data_wget;
  wire [70 : 0] wr_commit_wget;
  wire [66 : 0] wr_flush_wget;
  wire [1 : 0] wr_initiate_store_wget;
  wire rxinst_w_ena_whas,
       wr_commit_whas,
       wr_count_csrops_whas,
       wr_count_exceptions_whas,
       wr_count_interrupts_whas,
       wr_flush_whas,
       wr_initiate_store_whas;

  // register rg_epoch
  reg rg_epoch;
  wire rg_epoch_D_IN, rg_epoch_EN;

  // register rg_store_initiated
  reg rg_store_initiated;
  wire rg_store_initiated_D_IN, rg_store_initiated_EN;

  // ports of submodule csr
  wire [198 : 0] csr_mv_csrs_to_decode;
  wire [79 : 0] csr_ma_debug_access_csrs_cmd;
  wire [64 : 0] csr_mv_resp_to_core, csr_system_instruction;
  wire [63 : 0] csr_ma_clint_mtime_c_mtime,
		csr_mv_csr_mstatus,
		csr_mv_csr_satp,
		csr_system_instruction_op1,
		csr_take_trap,
		csr_take_trap_badaddr,
		csr_take_trap_pc;
  wire [29 : 0] csr_ma_events_grp4_e,
		csr_ma_events_grp5_e,
		csr_ma_events_grp6_e,
		csr_ma_events_grp7_e;
  wire [11 : 0] csr_system_instruction_csr_address;
  wire [5 : 0] csr_take_trap_type_cause;
  wire [4 : 0] csr_ma_update_fflags_flags;
  wire [2 : 0] csr_mv_cacheenable, csr_system_instruction_funct3;
  wire [1 : 0] csr_mv_curr_priv, csr_system_instruction_lpc;
  wire csr_EN_ma_clint_msip,
       csr_EN_ma_clint_mtime,
       csr_EN_ma_clint_mtip,
       csr_EN_ma_debug_access_csrs,
       csr_EN_ma_debug_halt_request,
       csr_EN_ma_debug_resume_request,
       csr_EN_ma_events_grp4,
       csr_EN_ma_events_grp5,
       csr_EN_ma_events_grp6,
       csr_EN_ma_events_grp7,
       csr_EN_ma_incr_minstret,
       csr_EN_ma_set_external_interrupt,
       csr_EN_ma_update_fflags,
       csr_EN_system_instruction,
       csr_EN_take_trap,
       csr_RDY_ma_debug_access_csrs,
       csr_RDY_ma_set_external_interrupt,
       csr_RDY_mv_csrs_to_decode,
       csr_RDY_mv_resume_wfi,
       csr_RDY_system_instruction,
       csr_RDY_take_trap,
       csr_ma_clint_msip_intrpt,
       csr_ma_clint_mtip_intrpt,
       csr_ma_debug_halt_request_ip,
       csr_ma_debug_resume_request_ip,
       csr_ma_set_external_interrupt_ex_i,
       csr_mv_core_debugenable,
       csr_mv_core_is_halted,
       csr_mv_csr_misa_c,
       csr_mv_resume_wfi,
       csr_mv_step_ie,
       csr_mv_step_is_set;

  // ports of submodule dump_ff
  wire [167 : 0] dump_ff_D_IN, dump_ff_D_OUT;
  wire dump_ff_CLR, dump_ff_DEQ, dump_ff_EMPTY_N, dump_ff_ENQ, dump_ff_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_increment_instruction_counter,
       CAN_FIRE_RL_instruction_commit,
       CAN_FIRE_dump_get,
       CAN_FIRE_ma_clint_msip,
       CAN_FIRE_ma_clint_mtime,
       CAN_FIRE_ma_clint_mtip,
       CAN_FIRE_ma_debug_access_csrs,
       CAN_FIRE_ma_debug_halt_request,
       CAN_FIRE_ma_debug_resume_request,
       CAN_FIRE_ma_events_grp4,
       CAN_FIRE_ma_events_grp5,
       CAN_FIRE_ma_events_grp6,
       CAN_FIRE_ma_events_grp7,
       CAN_FIRE_ma_set_external_interrupt,
       CAN_FIRE_rx_in_first,
       CAN_FIRE_rx_in_first_deq_rdy,
       CAN_FIRE_rx_in_notEmpty,
       CAN_FIRE_rx_inst_first,
       CAN_FIRE_rx_inst_first_deq_rdy,
       CAN_FIRE_rx_inst_notEmpty,
       CAN_FIRE_store_is_cached,
       CAN_FIRE_write_resp,
       WILL_FIRE_RL_increment_instruction_counter,
       WILL_FIRE_RL_instruction_commit,
       WILL_FIRE_dump_get,
       WILL_FIRE_ma_clint_msip,
       WILL_FIRE_ma_clint_mtime,
       WILL_FIRE_ma_clint_mtip,
       WILL_FIRE_ma_debug_access_csrs,
       WILL_FIRE_ma_debug_halt_request,
       WILL_FIRE_ma_debug_resume_request,
       WILL_FIRE_ma_events_grp4,
       WILL_FIRE_ma_events_grp5,
       WILL_FIRE_ma_events_grp6,
       WILL_FIRE_ma_events_grp7,
       WILL_FIRE_ma_set_external_interrupt,
       WILL_FIRE_rx_in_first,
       WILL_FIRE_rx_in_first_deq_rdy,
       WILL_FIRE_rx_in_notEmpty,
       WILL_FIRE_rx_inst_first,
       WILL_FIRE_rx_inst_first_deq_rdy,
       WILL_FIRE_rx_inst_notEmpty,
       WILL_FIRE_store_is_cached,
       WILL_FIRE_write_resp;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d12;
  reg TASK_testplusargs___d13;
  reg TASK_testplusargs___d14;
  reg [63 : 0] v__h1741;
  reg TASK_testplusargs___d142;
  reg TASK_testplusargs___d143;
  reg TASK_testplusargs___d144;
  reg [63 : 0] v__h2277;
  reg TASK_testplusargs___d160;
  reg TASK_testplusargs___d161;
  reg TASK_testplusargs___d162;
  reg [63 : 0] v__h2648;
  reg TASK_testplusargs___d222;
  reg TASK_testplusargs___d223;
  reg TASK_testplusargs___d224;
  reg [63 : 0] v__h3519;
  reg TASK_testplusargs___d238;
  reg TASK_testplusargs___d239;
  reg TASK_testplusargs___d240;
  reg [63 : 0] v__h4012;
  reg TASK_testplusargs___d251;
  reg TASK_testplusargs___d252;
  reg TASK_testplusargs___d253;
  reg [63 : 0] v__h3278;
  reg TASK_testplusargs___d264;
  reg TASK_testplusargs___d265;
  reg TASK_testplusargs___d266;
  reg [63 : 0] v__h4595;
  reg TASK_testplusargs___d289;
  reg TASK_testplusargs___d290;
  reg TASK_testplusargs___d291;
  reg [63 : 0] v__h5116;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45;
  reg IF_rx_w_data_whas__4_THEN_rx_w_data_wget__5_BI_ETC___d147;
  reg rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d165;
  reg wr_store_response_whas__8_AND_wr_store_respons_ETC___d227;
  reg NOT_wr_store_response_whas__8_32_OR_NOT_wr_sto_ETC___d243;
  reg NOT_rg_store_initiated_2_3_AND_TASK_testplusar_ETC___d256;
  reg rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d269;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d65;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d68;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75;
  reg rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d149;
  reg rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230;
  reg rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d246;
  reg rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d259;
  reg NOT_rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_r_ETC___d294;
  // synopsys translate_on

  // remaining internal signals
  reg [63 : 0] jump_address__h2529;
  reg [1 : 0] CASE_dump_ffD_OUT_BITS_167_TO_166_1_dump_ffD_ETC__q2,
	      CASE_rx_in_first_x_BITS_136_TO_135_0_rx_in_fir_ETC__q1,
	      IF_csr_mv_csrs_to_decode__85_BITS_198_TO_197_8_ETC___d190;
  wire [63 : 0] IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d203,
		x__h3072,
		x__h4393,
		x__h4931,
		x__h5262,
		y_avValue_snd_snd_fst__h5266;
  wire [5 : 0] rx_w_datawget_BITS_134_TO_129__q3;
  wire IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d273,
       NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d173,
       NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d93,
       __duses38,
       rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111,
       rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d115,
       rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141,
       rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d177,
       rg_store_initiated_2_AND_wr_store_response_wha_ETC___d130,
       rg_store_initiated_2_AND_wr_store_response_wha_ETC___d172,
       rx_w_data_whas__4_AND_NOT_rx_w_data_wget__5_BI_ETC___d103,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d113,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d132,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d153,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d157,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d175,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249;

  // action method rx_in_notEmpty
  assign CAN_FIRE_rx_in_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_in_notEmpty = 1'd1 ;

  // action method rx_in_first_deq_rdy
  assign CAN_FIRE_rx_in_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_in_first_deq_rdy = 1'd1 ;

  // action method rx_in_first
  assign CAN_FIRE_rx_in_first = 1'd1 ;
  assign WILL_FIRE_rx_in_first = 1'd1 ;

  // value method rx_in_deq_ena
  assign rx_in_deq_ena = rxinst_w_ena_whas ;

  // action method rx_inst_notEmpty
  assign CAN_FIRE_rx_inst_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_inst_notEmpty = 1'd1 ;

  // action method rx_inst_first_deq_rdy
  assign CAN_FIRE_rx_inst_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_inst_first_deq_rdy = 1'd1 ;

  // action method rx_inst_first
  assign CAN_FIRE_rx_inst_first = 1'd1 ;
  assign WILL_FIRE_rx_inst_first = 1'd1 ;

  // value method rx_inst_deq_ena
  assign rx_inst_deq_ena = rxinst_w_ena_whas ;

  // value method commit_rd
  assign commit_rd =
	     { wr_commit_whas && wr_commit_wget[70], wr_commit_wget[69:0] } ;
  assign RDY_commit_rd = 1'd1 ;

  // value method flush_fst
  assign flush_fst = wr_flush_whas && wr_flush_wget[66] ;
  assign RDY_flush_fst = 1'd1 ;

  // value method flush_snd_fst
  assign flush_snd_fst = wr_flush_wget[65:2] ;
  assign RDY_flush_snd_fst = 1'd1 ;

  // value method flush_snd_snd_fst
  assign flush_snd_snd_fst = wr_flush_whas && wr_flush_wget[1] ;
  assign RDY_flush_snd_snd_fst = 1'd1 ;

  // value method flush_snd_snd_snd
  assign flush_snd_snd_snd = wr_flush_whas && wr_flush_wget[0] ;
  assign RDY_flush_snd_snd_snd = 1'd1 ;

  // value method mv_csrs_to_decode
  assign mv_csrs_to_decode =
	     { IF_csr_mv_csrs_to_decode__85_BITS_198_TO_197_8_ETC___d190,
	       csr_mv_csrs_to_decode[196:0] } ;
  assign RDY_mv_csrs_to_decode = csr_RDY_mv_csrs_to_decode ;

  // action method ma_clint_msip
  assign RDY_ma_clint_msip = 1'd1 ;
  assign CAN_FIRE_ma_clint_msip = 1'd1 ;
  assign WILL_FIRE_ma_clint_msip = EN_ma_clint_msip ;

  // action method ma_clint_mtip
  assign RDY_ma_clint_mtip = 1'd1 ;
  assign CAN_FIRE_ma_clint_mtip = 1'd1 ;
  assign WILL_FIRE_ma_clint_mtip = EN_ma_clint_mtip ;

  // action method ma_clint_mtime
  assign RDY_ma_clint_mtime = 1'd1 ;
  assign CAN_FIRE_ma_clint_mtime = 1'd1 ;
  assign WILL_FIRE_ma_clint_mtime = EN_ma_clint_mtime ;

  // actionvalue method dump_get
  assign dump_get =
	     { CASE_dump_ffD_OUT_BITS_167_TO_166_1_dump_ffD_ETC__q2,
	       dump_ff_D_OUT[165:0] } ;
  assign RDY_dump_get = dump_ff_EMPTY_N ;
  assign CAN_FIRE_dump_get = dump_ff_EMPTY_N ;
  assign WILL_FIRE_dump_get = EN_dump_get ;

  // value method mv_csr_satp
  assign mv_csr_satp = csr_mv_csr_satp ;
  assign RDY_mv_csr_satp = 1'd1 ;

  // action method ma_set_external_interrupt
  assign RDY_ma_set_external_interrupt = csr_RDY_ma_set_external_interrupt ;
  assign CAN_FIRE_ma_set_external_interrupt =
	     csr_RDY_ma_set_external_interrupt ;
  assign WILL_FIRE_ma_set_external_interrupt = EN_ma_set_external_interrupt ;

  // value method mv_csr_misa_c
  assign mv_csr_misa_c = csr_mv_csr_misa_c ;
  assign RDY_mv_csr_misa_c = 1'd1 ;

  // value method initiate_store_fst
  assign initiate_store_fst =
	     wr_initiate_store_whas && wr_initiate_store_wget[1] ;
  assign RDY_initiate_store_fst = 1'd1 ;

  // value method initiate_store_snd
  assign initiate_store_snd =
	     wr_initiate_store_whas && wr_initiate_store_wget[0] ;
  assign RDY_initiate_store_snd = 1'd1 ;

  // action method write_resp
  assign RDY_write_resp = 1'd1 ;
  assign CAN_FIRE_write_resp = 1'd1 ;
  assign WILL_FIRE_write_resp = EN_write_resp ;

  // action method store_is_cached
  assign CAN_FIRE_store_is_cached = 1'd1 ;
  assign WILL_FIRE_store_is_cached = 1'd1 ;

  // value method mv_cacheenable
  assign mv_cacheenable = csr_mv_cacheenable ;
  assign RDY_mv_cacheenable = 1'd1 ;

  // value method mv_curr_priv
  assign mv_curr_priv = csr_mv_curr_priv ;
  assign RDY_mv_curr_priv = 1'd1 ;

  // value method mv_csr_mstatus
  assign mv_csr_mstatus = csr_mv_csr_mstatus ;
  assign RDY_mv_csr_mstatus = 1'd1 ;

  // value method mv_resume_wfi
  assign mv_resume_wfi = csr_mv_resume_wfi ;
  assign RDY_mv_resume_wfi = csr_RDY_mv_resume_wfi ;

  // action method ma_debug_access_csrs
  assign RDY_ma_debug_access_csrs = csr_RDY_ma_debug_access_csrs ;
  assign CAN_FIRE_ma_debug_access_csrs = csr_RDY_ma_debug_access_csrs ;
  assign WILL_FIRE_ma_debug_access_csrs = EN_ma_debug_access_csrs ;

  // action method ma_debug_halt_request
  assign RDY_ma_debug_halt_request = 1'd1 ;
  assign CAN_FIRE_ma_debug_halt_request = 1'd1 ;
  assign WILL_FIRE_ma_debug_halt_request = EN_ma_debug_halt_request ;

  // action method ma_debug_resume_request
  assign RDY_ma_debug_resume_request = 1'd1 ;
  assign CAN_FIRE_ma_debug_resume_request = 1'd1 ;
  assign WILL_FIRE_ma_debug_resume_request = EN_ma_debug_resume_request ;

  // value method mv_core_is_halted
  assign mv_core_is_halted = csr_mv_core_is_halted ;
  assign RDY_mv_core_is_halted = 1'd1 ;

  // value method mv_step_is_set
  assign mv_step_is_set = csr_mv_step_is_set ;
  assign RDY_mv_step_is_set = 1'd1 ;

  // value method mv_step_ie
  assign mv_step_ie = csr_mv_step_ie ;
  assign RDY_mv_step_ie = 1'd1 ;

  // value method mv_core_debugenable
  assign mv_core_debugenable = csr_mv_core_debugenable ;
  assign RDY_mv_core_debugenable = 1'd1 ;

  // value method mv_resp_to_core
  assign mv_resp_to_core = csr_mv_resp_to_core ;
  assign RDY_mv_resp_to_core = 1'd1 ;

  // action method ma_events_grp4
  assign RDY_ma_events_grp4 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp4 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp4 = EN_ma_events_grp4 ;

  // action method ma_events_grp5
  assign RDY_ma_events_grp5 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp5 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp5 = EN_ma_events_grp5 ;

  // action method ma_events_grp6
  assign RDY_ma_events_grp6 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp6 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp6 = EN_ma_events_grp6 ;

  // action method ma_events_grp7
  assign RDY_ma_events_grp7 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp7 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp7 = EN_ma_events_grp7 ;

  // value method mv_count_exceptions
  assign mv_count_exceptions = wr_count_exceptions_whas ;
  assign RDY_mv_count_exceptions = 1'd1 ;

  // value method mv_count_interrupts
  assign mv_count_interrupts = wr_count_interrupts_whas ;
  assign RDY_mv_count_interrupts = 1'd1 ;

  // value method mv_count_csrops
  assign mv_count_csrops = wr_count_csrops_whas ;
  assign RDY_mv_count_csrops = 1'd1 ;

  // submodule csr
  mkcsr #(.hartid(hartid)) csr(.CLK(CLK),
			       .RST_N(RST_N),
			       .ma_clint_msip_intrpt(csr_ma_clint_msip_intrpt),
			       .ma_clint_mtime_c_mtime(csr_ma_clint_mtime_c_mtime),
			       .ma_clint_mtip_intrpt(csr_ma_clint_mtip_intrpt),
			       .ma_debug_access_csrs_cmd(csr_ma_debug_access_csrs_cmd),
			       .ma_debug_halt_request_ip(csr_ma_debug_halt_request_ip),
			       .ma_debug_resume_request_ip(csr_ma_debug_resume_request_ip),
			       .ma_events_grp4_e(csr_ma_events_grp4_e),
			       .ma_events_grp5_e(csr_ma_events_grp5_e),
			       .ma_events_grp6_e(csr_ma_events_grp6_e),
			       .ma_events_grp7_e(csr_ma_events_grp7_e),
			       .ma_set_external_interrupt_ex_i(csr_ma_set_external_interrupt_ex_i),
			       .ma_update_fflags_flags(csr_ma_update_fflags_flags),
			       .system_instruction_csr_address(csr_system_instruction_csr_address),
			       .system_instruction_funct3(csr_system_instruction_funct3),
			       .system_instruction_lpc(csr_system_instruction_lpc),
			       .system_instruction_op1(csr_system_instruction_op1),
			       .take_trap_badaddr(csr_take_trap_badaddr),
			       .take_trap_pc(csr_take_trap_pc),
			       .take_trap_type_cause(csr_take_trap_type_cause),
			       .EN_system_instruction(csr_EN_system_instruction),
			       .EN_take_trap(csr_EN_take_trap),
			       .EN_ma_clint_msip(csr_EN_ma_clint_msip),
			       .EN_ma_clint_mtip(csr_EN_ma_clint_mtip),
			       .EN_ma_clint_mtime(csr_EN_ma_clint_mtime),
			       .EN_ma_incr_minstret(csr_EN_ma_incr_minstret),
			       .EN_ma_update_fflags(csr_EN_ma_update_fflags),
			       .EN_ma_set_external_interrupt(csr_EN_ma_set_external_interrupt),
			       .EN_ma_debug_access_csrs(csr_EN_ma_debug_access_csrs),
			       .EN_ma_debug_halt_request(csr_EN_ma_debug_halt_request),
			       .EN_ma_debug_resume_request(csr_EN_ma_debug_resume_request),
			       .EN_ma_events_grp4(csr_EN_ma_events_grp4),
			       .EN_ma_events_grp5(csr_EN_ma_events_grp5),
			       .EN_ma_events_grp6(csr_EN_ma_events_grp6),
			       .EN_ma_events_grp7(csr_EN_ma_events_grp7),
			       .system_instruction(csr_system_instruction),
			       .RDY_system_instruction(csr_RDY_system_instruction),
			       .mv_resp_to_core(csr_mv_resp_to_core),
			       .RDY_mv_resp_to_core(),
			       .mv_csrs_to_decode(csr_mv_csrs_to_decode),
			       .RDY_mv_csrs_to_decode(csr_RDY_mv_csrs_to_decode),
			       .mv_resume_wfi(csr_mv_resume_wfi),
			       .RDY_mv_resume_wfi(csr_RDY_mv_resume_wfi),
			       .take_trap(csr_take_trap),
			       .RDY_take_trap(csr_RDY_take_trap),
			       .RDY_ma_clint_msip(),
			       .RDY_ma_clint_mtip(),
			       .RDY_ma_clint_mtime(),
			       .RDY_ma_incr_minstret(),
			       .mv_csr_satp(csr_mv_csr_satp),
			       .RDY_mv_csr_satp(),
			       .RDY_ma_update_fflags(),
			       .RDY_ma_set_external_interrupt(csr_RDY_ma_set_external_interrupt),
			       .mv_csr_misa_c(csr_mv_csr_misa_c),
			       .RDY_mv_csr_misa_c(),
			       .mv_cacheenable(csr_mv_cacheenable),
			       .RDY_mv_cacheenable(),
			       .mv_curr_priv(csr_mv_curr_priv),
			       .RDY_mv_curr_priv(),
			       .mv_csr_mstatus(csr_mv_csr_mstatus),
			       .RDY_mv_csr_mstatus(),
			       .RDY_ma_debug_access_csrs(csr_RDY_ma_debug_access_csrs),
			       .RDY_ma_debug_halt_request(),
			       .RDY_ma_debug_resume_request(),
			       .mv_core_is_halted(csr_mv_core_is_halted),
			       .RDY_mv_core_is_halted(),
			       .mv_step_is_set(csr_mv_step_is_set),
			       .RDY_mv_step_is_set(),
			       .mv_step_ie(csr_mv_step_ie),
			       .RDY_mv_step_ie(),
			       .mv_core_debugenable(csr_mv_core_debugenable),
			       .RDY_mv_core_debugenable(),
			       .RDY_ma_events_grp4(),
			       .RDY_ma_events_grp5(),
			       .RDY_ma_events_grp6(),
			       .RDY_ma_events_grp7());

  // submodule dump_ff
  FIFOL1 #(.width(32'd168)) dump_ff(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(dump_ff_D_IN),
				    .ENQ(dump_ff_ENQ),
				    .DEQ(dump_ff_DEQ),
				    .CLR(dump_ff_CLR),
				    .D_OUT(dump_ff_D_OUT),
				    .FULL_N(dump_ff_FULL_N),
				    .EMPTY_N(dump_ff_EMPTY_N));

  // rule RL_instruction_commit
  assign CAN_FIRE_RL_instruction_commit =
	     rx_in_first_deq_rdy_b && rx_inst_first_deq_rdy_b &&
	     csr_RDY_system_instruction &&
	     csr_RDY_mv_csrs_to_decode &&
	     dump_ff_FULL_N &&
	     csr_RDY_take_trap ;
  assign WILL_FIRE_RL_instruction_commit = CAN_FIRE_RL_instruction_commit ;

  // rule RL_increment_instruction_counter
  assign CAN_FIRE_RL_increment_instruction_counter = wr_commit_whas ;
  assign WILL_FIRE_RL_increment_instruction_counter = wr_commit_whas ;

  // inlined wires
  assign rx_w_data_wget =
	     { CASE_rx_in_first_x_BITS_136_TO_135_0_rx_in_fir_ETC__q1,
	       rx_in_first_x[134:0] } ;
  assign rxinst_w_ena_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d113 ;
  assign wr_commit_wget =
	     { 1'd1,
	       (rx_w_data_wget[136:135] == 2'd1) ?
		 { rx_w_data_wget[5:1], rx_w_data_wget[69:6], 1'd0 } :
		 ((rx_w_data_wget[136:135] != 2'd0 &&
		   rx_w_data_wget[136:135] != 2'd1 &&
		   rx_w_data_wget[136:135] != 2'd2) ?
		    { rx_w_data_wget[5:1], csr_mv_resp_to_core[63:0], 1'd0 } :
		    { rx_w_data_wget[11:7],
		      rx_w_data_wget[75:12],
		      rx_w_data_wget[1] }) } ;
  assign wr_commit_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d177 ;
  assign wr_flush_wget =
	     { rx_w_data_wget[136:135] == 2'd0 ||
	       IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d273,
	       x__h5262,
	       rx_w_data_wget[136:135] == 2'd0 &&
	       rx_w_data_wget[134:129] == 6'd24,
	       rx_w_data_wget[136:135] == 2'd0 &&
	       rx_w_data_wget[134:129] == 6'd25 } ;
  assign wr_flush_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 ;
  assign wr_count_exceptions_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d157 ;
  assign wr_count_interrupts_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d153 ;
  assign wr_count_csrops_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_whas__4_AND_NOT_rx_w_data_wget__5_BI_ETC___d103 ;
  assign wr_initiate_store_wget = { rg_epoch, 1'd1 } ;
  assign wr_initiate_store_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d115 ||
	      !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	      rx_w_data_wget[136:135] == 2'd1) ;

  // register rg_epoch
  assign rg_epoch_D_IN = ~rg_epoch ;
  assign rg_epoch_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     (rx_w_data_wget[136:135] == 2'd0 ||
	      IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d273) ;

  // register rg_store_initiated
  assign rg_store_initiated_D_IN = !rg_store_initiated ;
  assign rg_store_initiated_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] == 2'd1 &&
	     __duses38 ;

  // submodule csr
  assign csr_ma_clint_msip_intrpt = ma_clint_msip_intrpt ;
  assign csr_ma_clint_mtime_c_mtime = ma_clint_mtime_c_mtime ;
  assign csr_ma_clint_mtip_intrpt = ma_clint_mtip_intrpt ;
  assign csr_ma_debug_access_csrs_cmd = ma_debug_access_csrs_cmd ;
  assign csr_ma_debug_halt_request_ip = ma_debug_halt_request_ip ;
  assign csr_ma_debug_resume_request_ip = ma_debug_resume_request_ip ;
  assign csr_ma_events_grp4_e = ma_events_grp4_e ;
  assign csr_ma_events_grp5_e = ma_events_grp5_e ;
  assign csr_ma_events_grp6_e = ma_events_grp6_e ;
  assign csr_ma_events_grp7_e = ma_events_grp7_e ;
  assign csr_ma_set_external_interrupt_ex_i = ma_set_external_interrupt_ex_i ;
  assign csr_ma_update_fflags_flags = rx_w_data_wget[6:2] ;
  assign csr_system_instruction_csr_address = rx_w_data_wget[20:9] ;
  assign csr_system_instruction_funct3 = rx_w_data_wget[8:6] ;
  assign csr_system_instruction_lpc = rx_w_data_wget[22:21] ;
  assign csr_system_instruction_op1 = rx_w_data_wget[86:23] ;
  assign csr_take_trap_badaddr =
	     (rx_w_data_wget[136:135] == 2'd0) ?
	       rx_w_data_wget[128:65] :
	       write_resp_r[63:0] ;
  assign csr_take_trap_pc =
	     (rx_w_data_wget[136:135] == 2'd0) ?
	       rx_w_data_wget[64:1] :
	       rx_w_data_wget[133:70] ;
  assign csr_take_trap_type_cause =
	     (rx_w_data_wget[136:135] == 2'd0) ?
	       rx_w_data_wget[134:129] :
	       6'd7 ;
  assign csr_EN_system_instruction =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] != 2'd0 &&
	     rx_w_data_wget[136:135] != 2'd1 &&
	     rx_w_data_wget[136:135] != 2'd2 ;
  assign csr_EN_take_trap =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d132 ;
  assign csr_EN_ma_clint_msip = EN_ma_clint_msip ;
  assign csr_EN_ma_clint_mtip = EN_ma_clint_mtip ;
  assign csr_EN_ma_clint_mtime = EN_ma_clint_mtime ;
  assign csr_EN_ma_incr_minstret = wr_commit_whas ;
  assign csr_EN_ma_update_fflags =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] == 2'd2 ;
  assign csr_EN_ma_set_external_interrupt = EN_ma_set_external_interrupt ;
  assign csr_EN_ma_debug_access_csrs = EN_ma_debug_access_csrs ;
  assign csr_EN_ma_debug_halt_request = EN_ma_debug_halt_request ;
  assign csr_EN_ma_debug_resume_request = EN_ma_debug_resume_request ;
  assign csr_EN_ma_events_grp4 = EN_ma_events_grp4 ;
  assign csr_EN_ma_events_grp5 = EN_ma_events_grp5 ;
  assign csr_EN_ma_events_grp6 = EN_ma_events_grp6 ;
  assign csr_EN_ma_events_grp7 = EN_ma_events_grp7 ;

  // submodule dump_ff
  assign dump_ff_D_IN =
	     { IF_csr_mv_csrs_to_decode__85_BITS_198_TO_197_8_ETC___d190,
	       (rx_w_data_wget[136:135] == 2'd1) ?
		 rx_w_data_wget[133:70] :
		 rx_inst_first_x[95:32],
	       rx_inst_first_x[31:0],
	       (rx_w_data_wget[136:135] != 2'd0 &&
		rx_w_data_wget[136:135] != 2'd2) ?
		 rx_w_data_wget[5:1] :
		 rx_w_data_wget[11:7],
	       IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d203,
	       (rx_w_data_wget[136:135] == 2'd0 ||
		rx_w_data_wget[136:135] == 2'd2) &&
	       rx_w_data_wget[1] } ;
  assign dump_ff_ENQ = wr_commit_whas ;
  assign dump_ff_DEQ = EN_dump_get ;
  assign dump_ff_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d203 =
	     (rx_w_data_wget[136:135] == 2'd1) ?
	       x__h3072 :
	       ((rx_w_data_wget[136:135] != 2'd0 &&
		 rx_w_data_wget[136:135] != 2'd1 &&
		 rx_w_data_wget[136:135] != 2'd2) ?
		  x__h4393 :
		  x__h4931) ;
  assign IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d273 =
	     (rx_w_data_wget[136:135] == 2'd1) ?
	       rg_store_initiated_2_AND_wr_store_response_wha_ETC___d130 :
	       rx_w_data_wget[136:135] != 2'd0 &&
	       rx_w_data_wget[136:135] != 2'd1 &&
	       rx_w_data_wget[136:135] != 2'd2 &&
	       csr_system_instruction[64] ;
  assign NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d173 =
	     !rg_store_initiated && store_is_cached_c ||
	     rg_store_initiated_2_AND_wr_store_response_wha_ETC___d172 ;
  assign NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d93 =
	     !rg_store_initiated && store_is_cached_c ||
	     rg_store_initiated && EN_write_resp && write_resp_r[65] ;
  assign __duses38 =
	     (rg_store_initiated || !store_is_cached_c) &&
	     (EN_write_resp && write_resp_r[65] || !rg_store_initiated) ;
  assign rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 =
	     rg_epoch == rx_w_data_wget[0] ;
  assign rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d115 =
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] == 2'd1 &&
	     !rg_store_initiated ;
  assign rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141 =
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] == 2'd0 &&
	     (rx_w_data_wget[134:129] == 6'd23 ||
	      rx_w_data_wget[134:129] == 6'd24 ||
	      rx_w_data_wget[134:129] == 6'd25) ;
  assign rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d177 =
	     rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	     rx_w_data_wget[136:135] != 2'd0 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d175 ;
  assign rg_store_initiated_2_AND_wr_store_response_wha_ETC___d130 =
	     rg_store_initiated && EN_write_resp && write_resp_r[65] &&
	     write_resp_r[64] ;
  assign rg_store_initiated_2_AND_wr_store_response_wha_ETC___d172 =
	     rg_store_initiated && EN_write_resp && write_resp_r[65] &&
	     !write_resp_r[64] ;
  assign rx_w_data_whas__4_AND_NOT_rx_w_data_wget__5_BI_ETC___d103 =
	     rx_w_data_wget[136:135] != 2'd0 &&
	     rx_w_data_wget[136:135] != 2'd1 &&
	     rx_w_data_wget[136:135] != 2'd2 &&
	     (csr_system_instruction[64] || csr_mv_resp_to_core[64]) ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d113 =
	     rx_w_data_wget[136:135] == 2'd0 ||
	     rx_w_data_wget[136:135] == 2'd1 &&
	     NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d93 ||
	     rx_w_data_wget[136:135] != 2'd1 &&
	     (rx_w_data_whas__4_AND_NOT_rx_w_data_wget__5_BI_ETC___d103 ||
	      rx_w_data_wget[136:135] == 2'd2) ||
	     !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d132 =
	     rx_w_data_wget[136:135] == 2'd0 &&
	     rx_w_data_wget[134:129] != 6'd23 &&
	     rx_w_data_wget[134:129] != 6'd24 &&
	     rx_w_data_wget[134:129] != 6'd25 ||
	     rx_w_data_wget[136:135] == 2'd1 &&
	     rg_store_initiated_2_AND_wr_store_response_wha_ETC___d130 ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d153 =
	     rx_w_data_wget[136:135] == 2'd0 &&
	     rx_w_datawget_BITS_134_TO_129__q3[5] ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d157 =
	     rx_w_data_wget[136:135] == 2'd0 &&
	     rx_w_data_wget[134:129] != 6'd23 &&
	     rx_w_data_wget[134:129] != 6'd24 &&
	     rx_w_data_wget[134:129] != 6'd25 &&
	     !rx_w_datawget_BITS_134_TO_129__q3[5] ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d175 =
	     rx_w_data_wget[136:135] == 2'd1 &&
	     NOT_rg_store_initiated_2_3_AND_wr_store_is_cac_ETC___d173 ||
	     rx_w_data_wget[136:135] != 2'd1 &&
	     (rx_w_data_whas__4_AND_NOT_rx_w_data_wget__5_BI_ETC___d103 ||
	      rx_w_data_wget[136:135] == 2'd2) ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220 =
	     rx_w_data_wget[136:135] == 2'd1 && rg_store_initiated &&
	     EN_write_resp &&
	     write_resp_r[65] ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236 =
	     rx_w_data_wget[136:135] == 2'd1 && rg_store_initiated &&
	     (!EN_write_resp || !write_resp_r[65]) ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249 =
	     rx_w_data_wget[136:135] == 2'd1 && !store_is_cached_c &&
	     !rg_store_initiated ;
  assign rx_w_datawget_BITS_134_TO_129__q3 = rx_w_data_wget[134:129] ;
  assign x__h3072 =
	     (rx_w_data_wget[5:1] == 5'd0) ? 64'd0 : rx_w_data_wget[69:6] ;
  assign x__h4393 =
	     (rx_w_data_wget[5:1] == 5'd0) ?
	       64'd0 :
	       csr_mv_resp_to_core[63:0] ;
  assign x__h4931 =
	     (rx_w_data_wget[11:7] == 5'd0 && !rx_w_data_wget[1]) ?
	       64'd0 :
	       rx_w_data_wget[75:12] ;
  assign x__h5262 =
	     (rx_w_data_wget[136:135] == 2'd0) ?
	       jump_address__h2529 :
	       y_avValue_snd_snd_fst__h5266 ;
  assign y_avValue_snd_snd_fst__h5266 =
	     (rx_w_data_wget[136:135] == 2'd1) ?
	       csr_take_trap :
	       csr_system_instruction[63:0] ;
  always@(rx_in_first_x)
  begin
    case (rx_in_first_x[136:135])
      2'd0, 2'd1, 2'd2:
	  CASE_rx_in_first_x_BITS_136_TO_135_0_rx_in_fir_ETC__q1 =
	      rx_in_first_x[136:135];
      2'd3: CASE_rx_in_first_x_BITS_136_TO_135_0_rx_in_fir_ETC__q1 = 2'd3;
    endcase
  end
  always@(dump_ff_D_OUT)
  begin
    case (dump_ff_D_OUT[167:166])
      2'd1, 2'd3:
	  CASE_dump_ffD_OUT_BITS_167_TO_166_1_dump_ffD_ETC__q2 =
	      dump_ff_D_OUT[167:166];
      default: CASE_dump_ffD_OUT_BITS_167_TO_166_1_dump_ffD_ETC__q2 = 2'd0;
    endcase
  end
  always@(rx_w_data_wget or csr_take_trap)
  begin
    case (rx_w_data_wget[134:129])
      6'd23, 6'd24, 6'd25: jump_address__h2529 = rx_w_data_wget[64:1];
      default: jump_address__h2529 = csr_take_trap;
    endcase
  end
  always@(csr_mv_csrs_to_decode)
  begin
    case (csr_mv_csrs_to_decode[198:197])
      2'd1, 2'd3:
	  IF_csr_mv_csrs_to_decode__85_BITS_198_TO_197_8_ETC___d190 =
	      csr_mv_csrs_to_decode[198:197];
      default: IF_csr_mv_csrs_to_decode__85_BITS_198_TO_197_8_ETC___d190 =
		   2'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_epoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_store_initiated <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_epoch_EN) rg_epoch <= `BSV_ASSIGNMENT_DELAY rg_epoch_D_IN;
	if (rg_store_initiated_EN)
	  rg_store_initiated <= `BSV_ASSIGNMENT_DELAY rg_store_initiated_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_epoch = 1'h0;
    rg_store_initiated = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d12 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d13 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d14 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] == 2'd2;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] != 2'd0 &&
	rx_w_data_wget[136:135] != 2'd1 &&
	rx_w_data_wget[136:135] != 2'd2;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] == 2'd0;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] == 2'd1;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d65 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] == 2'd2 &&
	rx_w_data_wget[1];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d68 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] == 2'd2 &&
	!rx_w_data_wget[1];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] != 2'd0 &&
	rx_w_data_wget[136:135] != 2'd1;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_w_data_wget[136:135] != 2'd0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  v__h1741 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("[%10d", v__h1741, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("core:%2d ",
	       hartid,
	       "STAGE5: PC: %h: inst: %h commit: ",
	       rx_inst_first_x[95:32],
	       rx_inst_first_x[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("tagged TRAP ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("tagged STORE ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("tagged REG ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("tagged SYSTEM ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("CommitSystem { ", "rs1: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("'h%h", rx_w_data_wget[86:23]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write(", ", "lpc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("'h%h", rx_w_data_wget[22:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write(", ", "csraddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("'h%h", rx_w_data_wget[20:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write(", ", "func3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("'h%h", rx_w_data_wget[8:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("'h%h", rx_w_data_wget[5:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("CommitRegular { ", "commitvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("'h%h", rx_w_data_wget[75:12]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("'h%h", rx_w_data_wget[11:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write(", ", "fflags: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("'h%h", rx_w_data_wget[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d65)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d68)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d45)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("CommitStore { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_w_data_wget[133:70]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write(", ", "commitvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_w_data_wget[69:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_w_data_wget[5:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d70)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("CommitTrap { ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("'h%h", rx_w_data_wget[134:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("'h%h", rx_w_data_wget[128:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write(", ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d29)
	$write("'h%h", rx_w_data_wget[64:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d75)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141)
	begin
	  TASK_testplusargs___d142 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141)
	begin
	  TASK_testplusargs___d143 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141)
	begin
	  TASK_testplusargs___d144 = $test$plusargs("l0");
	  #0;
	end
    IF_rx_w_data_whas__4_THEN_rx_w_data_wget__5_BI_ETC___d147 =
	(rx_w_data_wget[134:129] == 6'd23 ||
	 rx_w_data_wget[134:129] == 6'd24 ||
	 rx_w_data_wget[134:129] == 6'd25) &&
	(TASK_testplusargs___d142 ||
	 TASK_testplusargs___d143 && TASK_testplusargs___d144);
    rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d149 =
	rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	rx_w_data_wget[136:135] == 2'd0 &&
	IF_rx_w_data_whas__4_THEN_rx_w_data_wget__5_BI_ETC___d147;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d141)
	begin
	  v__h2277 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d149)
	$write("[%10d", v__h2277, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d149)
	$write("core:%2d ", hartid, "STAGE5: Rerun initiated");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d149)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd0)
	begin
	  TASK_testplusargs___d160 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd0)
	begin
	  TASK_testplusargs___d161 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd0)
	begin
	  TASK_testplusargs___d162 = $test$plusargs("l0");
	  #0;
	end
    rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d165 =
	rx_w_data_wget[136:135] == 2'd0 &&
	(TASK_testplusargs___d160 ||
	 TASK_testplusargs___d161 && TASK_testplusargs___d162);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd0)
	begin
	  v__h2648 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d165)
	$write("[%10d", v__h2648, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d165)
	$write("core:%2d ",
	       hartid,
	       "STAGE5: Received TRAP:%d NewPC:%h fl:%b",
	       rx_w_data_wget[134:129],
	       jump_address__h2529,
	       1'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d165)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220)
	begin
	  TASK_testplusargs___d222 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220)
	begin
	  TASK_testplusargs___d223 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220)
	begin
	  TASK_testplusargs___d224 = $test$plusargs("l0");
	  #0;
	end
    wr_store_response_whas__8_AND_wr_store_respons_ETC___d227 =
	EN_write_resp && write_resp_r[65] &&
	(TASK_testplusargs___d222 ||
	 TASK_testplusargs___d223 && TASK_testplusargs___d224);
    rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230 =
	rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	rx_w_data_wget[136:135] == 2'd1 &&
	rg_store_initiated &&
	wr_store_response_whas__8_AND_wr_store_respons_ETC___d227;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d220)
	begin
	  v__h3519 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("[%10d", v__h3519, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("core:%2d ", hartid, "STAGE5: Store response Received: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("<");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("'h%h", write_resp_r[64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write(",");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("'h%h", write_resp_r[63:0], ">");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d230)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236)
	begin
	  TASK_testplusargs___d238 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236)
	begin
	  TASK_testplusargs___d239 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236)
	begin
	  TASK_testplusargs___d240 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_store_response_whas__8_32_OR_NOT_wr_sto_ETC___d243 =
	(!EN_write_resp || !write_resp_r[65]) &&
	(TASK_testplusargs___d238 ||
	 TASK_testplusargs___d239 && TASK_testplusargs___d240);
    rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d246 =
	rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	rx_w_data_wget[136:135] == 2'd1 &&
	rg_store_initiated &&
	NOT_wr_store_response_whas__8_32_OR_NOT_wr_sto_ETC___d243;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d236)
	begin
	  v__h4012 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d246)
	$write("[%10d", v__h4012, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d246)
	$write("core:%2d ", hartid, "STAGE5: Waiting for Store response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d246)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249)
	begin
	  TASK_testplusargs___d251 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249)
	begin
	  TASK_testplusargs___d252 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249)
	begin
	  TASK_testplusargs___d253 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_store_initiated_2_3_AND_TASK_testplusar_ETC___d256 =
	!rg_store_initiated &&
	(TASK_testplusargs___d251 ||
	 TASK_testplusargs___d252 && TASK_testplusargs___d253);
    rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d259 =
	rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	rx_w_data_wget[136:135] == 2'd1 &&
	(rg_store_initiated || !store_is_cached_c) &&
	NOT_rg_store_initiated_2_3_AND_TASK_testplusar_ETC___d256;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d249)
	begin
	  v__h3278 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d259)
	$write("[%10d", v__h3278, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d259)
	$write("core:%2d ", hartid, "STAGE5: Initiating Store request");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d259)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd2)
	begin
	  TASK_testplusargs___d264 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd2)
	begin
	  TASK_testplusargs___d265 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd2)
	begin
	  TASK_testplusargs___d266 = $test$plusargs("l0");
	  #0;
	end
    rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d269 =
	rx_w_data_wget[136:135] == 2'd2 &&
	(TASK_testplusargs___d264 ||
	 TASK_testplusargs___d265 && TASK_testplusargs___d266);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_wget[136:135] == 2'd2)
	begin
	  v__h4595 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d269)
	$write("[%10d", v__h4595, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d269)
	$write("core:%2d ", hartid, "STAGE5: Regular commit");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_1_ETC___d269)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111)
	begin
	  TASK_testplusargs___d289 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111)
	begin
	  TASK_testplusargs___d290 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111)
	begin
	  TASK_testplusargs___d291 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_r_ETC___d294 =
	!rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111 &&
	(TASK_testplusargs___d289 ||
	 TASK_testplusargs___d290 && TASK_testplusargs___d291);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_rx_w__ETC___d111)
	begin
	  v__h5116 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_r_ETC___d294)
	$write("[%10d", v__h5116, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_r_ETC___d294)
	$write("core:%2d ", hartid, "STAGE5: Dropping instruction");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_08_EQ_IF_rx_w_data_whas__4_THEN_r_ETC___d294)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage5

